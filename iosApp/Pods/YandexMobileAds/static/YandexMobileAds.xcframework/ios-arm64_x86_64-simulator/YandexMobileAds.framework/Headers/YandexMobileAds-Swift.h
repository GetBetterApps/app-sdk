#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef YANDEXMOBILEADS_SWIFT_H
#define YANDEXMOBILEADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#import <YandexMobileAds/YandexMobileAds.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YandexMobileAds",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@interface NSError (SWIFT_EXTENSION(YandexMobileAds))
/// . Is Yandex Mobile Native Ads error
@property (nonatomic, readonly) BOOL isYandexMobileNativeAdsError;
@end


@interface NSError (SWIFT_EXTENSION(YandexMobileAds))
/// Is <code>Yandex Mobile Ads</code> library error.
@property (nonatomic, readonly) BOOL isYandexMobileAdsError;
@end

/// Error description.
typedef SWIFT_ENUM(NSInteger, YMAAdErrorCode, open) {
/// The <code>AdUnitID</code> was omitted when loading the ad.
  YMAAdErrorCodeEmptyAdUnitID = 0,
/// An invalid <code>Application ID</code> was specified.
  YMAAdErrorCodeInvalidUUID = 1,
/// The <code>AdUnitID</code> specified when loading the ad wasn’t found.
  YMAAdErrorCodeNoSuchAdUnitID = 2,
/// The ad was loaded successfully, but there aren’t any available ads to display.
  YMAAdErrorCodeNoFill = 3,
/// Unexpected server response when loading the ad.
  YMAAdErrorCodeBadServerResponse = 4,
/// The ad size in the request does not match the ad size specified in the Partner interface for this ad block.
  YMAAdErrorCodeAdSizeMismatch = 5,
/// The ad type in the request does not match the ad type specified in the Partner interface for this ad block.
  YMAAdErrorCodeAdTypeMismatch = 6,
/// The service is temporarily unavailable. Try sending the request again later.
  YMAAdErrorCodeServiceTemporarilyNotAvailable = 7,
/// A full-screen ad can be shown only once.
  YMAAdErrorCodeAdHasAlreadyBeenPresented = 8,
/// ViewController passed for presenting full-screen ad is nil.
  YMAAdErrorCodeNilPresentingViewController = 9,
/// Incorrect fullscrseen view.
  YMAAdErrorCodeIncorrectFullscreenView = 10,
/// Invalid sdk configuration.
  YMAAdErrorCodeInvalidSDKConfiguration = 11,
};

@class NSString;
@class YMAAdSize;

/// A class with information data for ad.
SWIFT_CLASS("_TtC15YandexMobileAds9YMAAdInfo")
@interface YMAAdInfo : NSObject
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitId;
/// Size of downloaded ad.
@property (nonatomic, readonly, strong) YMAAdSize * _Nullable adSize;
- (nonnull instancetype)initWithAdUnitId:(NSString * _Nonnull)adUnitId adSize:(YMAAdSize * _Nullable)adSize;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class CLLocation;
enum YMAAdTheme : NSInteger;
@class YMAMutableAdRequest;

/// A class with data for a targeted ad request.
SWIFT_CLASS("_TtC15YandexMobileAds12YMAAdRequest")
@interface YMAAdRequest : NSObject <NSCopying, NSMutableCopying>
/// User age.
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, readonly, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic, readonly) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable biddingData;
/// Header bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable headerBiddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding mutable representation of current ad request.
@property (nonatomic, readonly, strong) YMAMutableAdRequest * _Nonnull mutableRequest;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableRequest` property instead.");
@end

@class YMAMutableAdRequestConfiguration;

/// This class is responsible for configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds25YMAAdRequestConfiguration")
@interface YMAAdRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitID;
/// User age.
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, readonly, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic, readonly) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding mutable representation of current ad request configuration.
@property (nonatomic, readonly, strong) YMAMutableAdRequestConfiguration * _Nonnull mutableConfiguration;
/// Initializes a new object of the <code>AdRequestConfiguration</code> class.
/// \param adUnitID The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format,
/// which is assigned in the Partner interface.
///
///
/// returns:
/// An object of the AdRequestConfiguration class, configuration for loading native ads.
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableConfiguration` property instead.");
@end


/// A class with error for requested ad.
SWIFT_CLASS("_TtC15YandexMobileAds17YMAAdRequestError")
@interface YMAAdRequestError : NSObject
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nullable adUnitId;
/// Error for  requested ad.
@property (nonatomic, readonly) NSError * _Nonnull error;
- (nonnull instancetype)initWithAdUnitId:(NSString * _Nullable)adUnitId error:(NSError * _Nonnull)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A class with size information for requested ad.
SWIFT_CLASS("_TtC15YandexMobileAds9YMAAdSize")
@interface YMAAdSize : NSObject
@property (nonatomic, readonly) CGFloat width;
@property (nonatomic, readonly) CGFloat height;
- (nonnull instancetype)initWithSize:(CGSize)size;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Ad theme.
typedef SWIFT_ENUM(NSInteger, YMAAdTheme, open) {
/// Unspecified ad theme (same as device theme).
  YMAAdThemeUnspecified = 0,
/// Light ad theme.
  YMAAdThemeLight = 1,
/// Dark ad theme.
  YMAAdThemeDark = 2,
};

/// A type of ad.
typedef SWIFT_ENUM(NSInteger, YMAAdType, open) {
/// The type of ad is banner.
  YMAAdTypeBanner = 0,
/// The type of ad is interstitial.
  YMAAdTypeInterstitial = 1,
/// The type of ad is rewarded.
  YMAAdTypeRewarded = 2,
/// The type of ad is native.
  YMAAdTypeNative = 3,
/// The type of ad is app open.
  YMAAdTypeAppOpenAd = 4,
};

@class YMAVideoController;
@protocol YMAAdViewDelegate;
@class YMABannerAdSize;
@class NSCoder;

/// This class is responsible for setting up and displaying the banner.
SWIFT_CLASS("_TtC15YandexMobileAds9YMAAdView")
@interface YMAAdView : UIView
/// It monitors the ad and receives notifications about user interaction with the ad.
/// remark:
/// It provides data necessary for displaying the ad
/// (for example, a <code>UIViewController</code> object that <code>YMAAdView</code> uses to show a modal controller
/// in response to the user interacting with the banner).
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitID;
/// VideoController provides playback control for ad video.
@property (nonatomic, readonly, strong) YMAVideoController * _Nonnull videoController;
/// It monitors the ad and receives notifications about user interaction with the ad.
/// remark:
/// It provides data necessary for displaying the ad
/// (for example, a <code>UIViewController</code> object that <code>YMAAdView</code> uses to show a modal controller
/// in response to the user interacting with the banner).
@property (nonatomic, weak) id <YMAAdViewDelegate> _Nullable delegate;
/// Initializes an object of the <code>YMAAdView</code> class to display the banner with the specified size.
/// \param adUnitID The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format,
/// which is assigned in the Partner interface.
///
/// \param adSize The size of the banner. The size of the banner is set in the <code>YMABannerAdSize</code> class.
///
///
/// returns:
/// Initializes an object of the <code>YMAAdView</code> class to display the banner with the specified size.
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID adSize:(YMABannerAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// Displays the banner centered at the top of the passed <code>View</code>.
/// \param view Object of the <code>UIView</code> class to add the banner to.
///
- (void)displayAtTopInView:(UIView * _Nonnull)view;
/// Displays the banner centered at the bottom of the passed <code>View</code>.
/// \param view An object of the <code>UIView</code> class to add the banner to.
///
- (void)displayAtBottomInView:(UIView * _Nonnull)view;
/// Loads a banner.
- (void)loadAd;
/// Loads a banner with data for targeting.
/// \param request Data for targeting.
///
- (void)loadAdWithRequest:(YMAAdRequest * _Nullable)request;
/// Returns the size of the banner content.
///
/// returns:
/// The size of the banner content.
- (CGSize)adContentSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@protocol UICoordinateSpace;
@class CALayer;
@class UIFocusEffect;
@class UIEvent;
@class UIWindow;
@class UILayoutGuide;
@class UIKeyboardLayoutGuide;
@class UIColor;
@class UIGestureRecognizer;
@class UIMotionEffect;
@class NSLayoutConstraint;
@class NSLayoutXAxisAnchor;
@class NSLayoutYAxisAnchor;
@class NSLayoutDimension;

@interface YMAAdView (SWIFT_EXTENSION(YandexMobileAds))
- (CGPoint)convertPoint:(CGPoint)point toCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect toCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)point fromCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect fromCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property (nonatomic) NSInteger tag;
@property (nonatomic, readonly, strong) CALayer * _Nonnull layer;
@property (nonatomic, readonly) BOOL canBecomeFocused;
@property (nonatomic, readonly, getter=isFocused) BOOL focused;
@property (nonatomic, copy) NSString * _Nullable focusGroupIdentifier SWIFT_AVAILABILITY(ios,introduced=14.0);
@property (nonatomic) UIFocusGroupPriority focusGroupPriority SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic, strong) UIFocusEffect * _Nullable focusEffect SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic) UISemanticContentAttribute semanticContentAttribute;
+ (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)attribute SWIFT_WARN_UNUSED_RESULT;
+ (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)semanticContentAttribute relativeToLayoutDirection:(UIUserInterfaceLayoutDirection)layoutDirection SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) UIUserInterfaceLayoutDirection effectiveUserInterfaceLayoutDirection;
@property (nonatomic) CGRect frame;
@property (nonatomic) CGRect bounds;
@property (nonatomic) CGPoint center;
@property (nonatomic) CGAffineTransform transform;
@property (nonatomic) CATransform3D transform3D;
@property (nonatomic) CGFloat contentScaleFactor;
@property (nonatomic) CGPoint anchorPoint SWIFT_AVAILABILITY(ios,introduced=16.0);
@property (nonatomic, getter=isMultipleTouchEnabled) BOOL multipleTouchEnabled;
@property (nonatomic, getter=isExclusiveTouch) BOOL exclusiveTouch;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)point toView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)point fromView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect toView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect fromView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL autoresizesSubviews;
@property (nonatomic) UIViewAutoresizing autoresizingMask;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)sizeToFit;
@property (nonatomic, readonly, strong) UIView * _Nullable superview;
@property (nonatomic, readonly, copy) NSArray<UIView *> * _Nonnull subviews;
@property (nonatomic, readonly, strong) UIWindow * _Nullable window;
- (void)removeFromSuperview;
- (void)insertSubview:(UIView * _Nonnull)view atIndex:(NSInteger)index;
- (void)exchangeSubviewAtIndex:(NSInteger)index1 withSubviewAtIndex:(NSInteger)index2;
- (void)addSubview:(UIView * _Nonnull)view;
- (void)insertSubview:(UIView * _Nonnull)view belowSubview:(UIView * _Nonnull)siblingSubview;
- (void)insertSubview:(UIView * _Nonnull)view aboveSubview:(UIView * _Nonnull)siblingSubview;
- (void)bringSubviewToFront:(UIView * _Nonnull)view;
- (void)sendSubviewToBack:(UIView * _Nonnull)view;
- (void)didAddSubview:(UIView * _Nonnull)subview;
- (void)willRemoveSubview:(UIView * _Nonnull)subview;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)didMoveToSuperview;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
- (BOOL)isDescendantOfView:(UIView * _Nonnull)view SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)viewWithTag:(NSInteger)tag SWIFT_WARN_UNUSED_RESULT;
- (void)setNeedsLayout;
- (void)layoutIfNeeded;
- (void)layoutSubviews;
@property (nonatomic) UIEdgeInsets layoutMargins;
@property (nonatomic) NSDirectionalEdgeInsets directionalLayoutMargins;
@property (nonatomic) BOOL preservesSuperviewLayoutMargins;
@property (nonatomic) BOOL insetsLayoutMarginsFromSafeArea;
- (void)layoutMarginsDidChange;
@property (nonatomic, readonly) UIEdgeInsets safeAreaInsets;
@property (nonatomic, readonly, strong) UILayoutGuide * _Nonnull layoutMarginsGuide;
@property (nonatomic, readonly, strong) UILayoutGuide * _Nonnull readableContentGuide;
@property (nonatomic, readonly, strong) UILayoutGuide * _Nonnull safeAreaLayoutGuide;
@property (nonatomic, readonly, strong) UIKeyboardLayoutGuide * _Nonnull keyboardLayoutGuide SWIFT_AVAILABILITY(ios,introduced=15.0);
- (void)drawRect:(CGRect)rect;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(CGRect)rect;
@property (nonatomic) BOOL clipsToBounds;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic) CGFloat alpha;
@property (nonatomic, getter=isOpaque) BOOL opaque;
@property (nonatomic) BOOL clearsContextBeforeDrawing;
@property (nonatomic, getter=isHidden) BOOL hidden;
@property (nonatomic) UIViewContentMode contentMode;
@property (nonatomic, strong) UIView * _Nullable maskView;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@property (nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode;
- (void)tintColorDidChange;
+ (void)setAnimationsEnabled:(BOOL)enabled;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL areAnimationsEnabled;)
+ (BOOL)areAnimationsEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)performWithoutAnimation:(SWIFT_NOESCAPE void (^ _Nonnull)(void))actionsWithoutAnimation;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval inheritedAnimationDuration;)
+ (NSTimeInterval)inheritedAnimationDuration SWIFT_WARN_UNUSED_RESULT;
+ (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay usingSpringWithDamping:(CGFloat)dampingRatio initialSpringVelocity:(CGFloat)velocity options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ _Nonnull)(void))animations;
+ (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)transitionWithView:(UIView * _Nonnull)view duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)transitionFromView:(UIView * _Nonnull)fromView toView:(UIView * _Nonnull)toView duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options completion:(void (^ _Nullable)(BOOL))completion;
+ (void)performSystemAnimation:(UISystemAnimation)animation onViews:(NSArray<UIView *> * _Nonnull)views options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))parallelAnimations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)modifyAnimationsWithRepeatCount:(CGFloat)count autoreverses:(BOOL)autoreverses animations:(SWIFT_NOESCAPE void (^ _Nonnull)(void))animations;
+ (void)animateKeyframesWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewKeyframeAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)addKeyframeWithRelativeStartTime:(double)frameStartTime relativeDuration:(double)frameDuration animations:(void (^ _Nonnull)(void))animations;
@property (nonatomic, copy) NSArray<UIGestureRecognizer *> * _Nullable gestureRecognizers;
- (void)addGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
- (void)removeGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)addMotionEffect:(UIMotionEffect * _Nonnull)effect;
- (void)removeMotionEffect:(UIMotionEffect * _Nonnull)effect;
@property (nonatomic, copy) NSArray<UIMotionEffect *> * _Nonnull motionEffects;
@property (nonatomic, readonly, copy) NSArray<NSLayoutConstraint *> * _Nonnull constraints;
- (void)addConstraint:(NSLayoutConstraint * _Nonnull)constraint;
- (void)addConstraints:(NSArray<NSLayoutConstraint *> * _Nonnull)constraints;
- (void)removeConstraint:(NSLayoutConstraint * _Nonnull)constraint;
- (void)removeConstraints:(NSArray<NSLayoutConstraint *> * _Nonnull)constraints;
- (void)updateConstraintsIfNeeded;
- (void)updateConstraints;
- (BOOL)needsUpdateConstraints SWIFT_WARN_UNUSED_RESULT;
- (void)setNeedsUpdateConstraints;
@property (nonatomic) BOOL translatesAutoresizingMaskIntoConstraints;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL requiresConstraintBasedLayout;)
+ (BOOL)requiresConstraintBasedLayout SWIFT_WARN_UNUSED_RESULT;
- (CGRect)alignmentRectForFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (CGRect)frameForAlignmentRect:(CGRect)alignmentRect SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) UIEdgeInsets alignmentRectInsets;
@property (nonatomic, readonly, strong) UIView * _Nonnull viewForLastBaselineLayout;
@property (nonatomic, readonly, strong) UIView * _Nonnull viewForFirstBaselineLayout;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis SWIFT_WARN_UNUSED_RESULT;
- (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
- (UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis SWIFT_WARN_UNUSED_RESULT;
- (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize SWIFT_WARN_UNUSED_RESULT;
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<UILayoutGuide *> * _Nonnull layoutGuides;
- (void)addLayoutGuide:(UILayoutGuide * _Nonnull)layoutGuide;
- (void)removeLayoutGuide:(UILayoutGuide * _Nonnull)layoutGuide;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull leadingAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull trailingAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull leftAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull rightAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull topAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull bottomAnchor;
@property (nonatomic, readonly, strong) NSLayoutDimension * _Nonnull widthAnchor;
@property (nonatomic, readonly, strong) NSLayoutDimension * _Nonnull heightAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull centerXAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull centerYAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull firstBaselineAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull lastBaselineAnchor;
- (NSArray<NSLayoutConstraint *> * _Nonnull)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasAmbiguousLayout;
- (void)exerciseAmbiguityInLayout;
@property (nonatomic, copy) NSString * _Nullable restorationIdentifier;
- (void)encodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder;
- (void)decodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder;
- (UIView * _Nullable)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)resizableSnapshotViewFromRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates withCapInsets:(UIEdgeInsets)capInsets SWIFT_WARN_UNUSED_RESULT;
- (BOOL)drawViewHierarchyInRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIUserInterfaceStyle overrideUserInterfaceStyle;
@property (nonatomic) UIContentSizeCategory _Nullable minimumContentSizeCategory SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic) UIContentSizeCategory _Nullable maximumContentSizeCategory SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic, readonly, copy) NSString * _Nonnull appliedContentSizeCategoryLimitsDescription SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic, copy) NSString * _Nullable accessibilityIdentifier;
@end

@class UIViewController;
@protocol YMAImpressionData;

/// The protocol defines the methods of a delegate that monitors the ads.
/// remark:
/// Methods are called by an object of the <code>YMAAdView</code> class when its state changes.
SWIFT_PROTOCOL("_TtP15YandexMobileAds17YMAAdViewDelegate_")
@protocol YMAAdViewDelegate <NSObject>
@optional
/// Returns a <code>UIViewController</code> object that <code>YMAAdView</code> uses to show a modal controller
/// in response to the user’s interaction with the banner.
/// remark:
/// Since a single <code>UIViewController</code> can’t show multiple modal controllers simultaneously,
/// the returned <code>UIViewController</code> must be displayed in front of all the other ones.
///
/// returns:
/// The <code>UIViewController</code> object that <code>YMAAdView</code> uses for showing a modal controller
/// in response to the user’s interaction with the banner.
- (UIViewController * _Nullable)viewControllerForPresentingModalView SWIFT_WARN_UNUSED_RESULT;
/// Notifies that the banner is loaded.
/// remark:
/// At this time, you can add <code>YMAAdView</code> if you haven’t done so yet.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
- (void)adViewDidLoad:(YMAAdView * _Nonnull)adView;
/// Notifies that the banner failed to load.
/// \param adView A reference to the object of the <code>AdView</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)adViewDidFailLoading:(YMAAdView * _Nonnull)adView error:(NSError * _Nonnull)error;
/// Notifies that the user has clicked on the banner.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
- (void)adViewDidClick:(YMAAdView * _Nonnull)adView;
/// Notifies that the app will become inactive now because the user clicked on the banner ad
/// and is about to switch to a different application (Phone, App Store, and so on).
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
- (void)adViewWillLeaveApplication:(YMAAdView * _Nonnull)adView;
/// Notifies that the user has clicked on the banner and the in-app browser will open now.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)adView:(YMAAdView * _Nonnull)adView willPresentScreen:(UIViewController * _Nullable)viewController;
/// Notifies that the user has closed the embedded browser.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)adView:(YMAAdView * _Nonnull)adView didDismissScreen:(UIViewController * _Nullable)viewController;
/// Notifies delegate when an impression was tracked.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)adView:(YMAAdView * _Nonnull)adView didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMAAppOpenAdDelegate;

/// This class is responsible for showing an app open ad.
SWIFT_CLASS("_TtC15YandexMobileAds12YMAAppOpenAd")
@interface YMAAppOpenAd : NSObject
/// Information data for ad
@property (nonatomic, readonly, strong) YMAAdInfo * _Nullable adInfo;
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAAppOpenAdDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Use this method to display an app open ad after preloading.
/// \param viewController An object of the <code>UIViewController</code> class, which is used to display an app open ad.
///
- (void)showFromViewController:(UIViewController * _Nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds20YMAAppOpenAdDelegate_")
@protocol YMAAppOpenAdDelegate <NSObject>
@optional
/// Notifies that the ad can’t be displayed.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)appOpenAd:(YMAAppOpenAd * _Nonnull)appOpenAd didFailToShowWithError:(NSError * _Nonnull)error;
/// Called after the interstitial ad shows.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
- (void)appOpenAdDidShow:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Called after dismissing the interstitial ad.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
- (void)appOpenAdDidDismiss:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Notifies that the user has clicked on the ad.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
- (void)appOpenAdDidClick:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Notifies delegate when an impression was tracked.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)appOpenAd:(YMAAppOpenAd * _Nonnull)appOpenAd didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMAAppOpenAdLoaderDelegate;

/// This class is responsible for loading an app open ad.
SWIFT_CLASS("_TtC15YandexMobileAds18YMAAppOpenAdLoader")
@interface YMAAppOpenAdLoader : NSObject
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAAppOpenAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param request Request configuration for targeting.
///
- (void)loadAdWith:(YMAAdRequestConfiguration * _Nonnull)request;
/// . Cancel the ad loading, that was launched in loadAdWithRequestConfiguration:requestConfiguration
- (void)cancelLoading;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds26YMAAppOpenAdLoaderDelegate_")
@protocol YMAAppOpenAdLoaderDelegate <NSObject>
/// Notifies that the ad loaded successfully.
/// \param adLoader A reference to an object of the <code>YMAAppOpenAdLoader</code> class that invoked the method.
///
/// \param appOpenAd Interstitial ad that is loaded and ready to be displayed.
///
- (void)appOpenAdLoader:(YMAAppOpenAdLoader * _Nonnull)adLoader didLoad:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Notifies that the ad failed to load.
/// \param adLoader A reference to an object of the <code>YMAAppOpenAdLoader</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)appOpenAdLoader:(YMAAppOpenAdLoader * _Nonnull)adLoader didFailToLoadWithError:(YMAAdRequestError * _Nonnull)error;
@end

@protocol YMAAudioSessionManagerDelegate;

/// This class allows you to manipulate with an audio session.
SWIFT_CLASS("_TtC15YandexMobileAds22YMAAudioSessionManager")
@interface YMAAudioSessionManager : NSObject
/// An object implementing the YMAAudioSessionManagerDelegate protocol
/// that receives events triggered by the audio session events.
@property (nonatomic, weak) id <YMAAudioSessionManagerDelegate> _Nullable delegate;
/// Indicates whether the application will manage audio session.
@property (nonatomic) BOOL isAutomaticallyManaged;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The protocol defines the methods of a delegate that monitors the audio session.
SWIFT_PROTOCOL("_TtP15YandexMobileAds30YMAAudioSessionManagerDelegate_")
@protocol YMAAudioSessionManagerDelegate <NSObject>
/// Notifies that the audio will start playing.
/// \param audioSessionManager A reference to the object of the YMAAudioSessionManager class that invoked the method.
///
- (void)audioSessionManagerWillPlayAudio:(YMAAudioSessionManager * _Nonnull)audioSessionManager;
/// Notifies that the audio did stop playing.
/// \param audioSessionManager A reference to the object of the YMAAudioSessionManager class that invoked the method.
///
- (void)audioSessionManagerDidStopPlayingAudio:(YMAAudioSessionManager * _Nonnull)audioSessionManager;
@end


/// This class is responsible for the banner size.
SWIFT_CLASS("_TtC15YandexMobileAds15YMABannerAdSize")
@interface YMABannerAdSize : NSObject
/// The initial size of the banner.
/// remark:
/// The actual size of the banner is determined when
/// calling the <code>YMAAdViewDelegate.adViewDidLoad:</code> method of the <code>YMAAdViewDelegate</code> class.
@property (nonatomic, readonly) CGSize size;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Creates an object of the <code>YMABannerAdSize</code> class with the specified maximum height and width of the banner.
/// The method is available for internal SDK logic. We recommend using <code>inline(width:maxHeight:)</code> for the feed
/// and <code>sticky(containerWidth:)</code> if you want to anchor the banenr to the top or bottom of the screen.
/// \param width Width of the banner.
///
/// \param height Height of the banner.
///
///
/// returns:
/// An object of the <code>YMABannerAdSize</code> class with the fixed size.
+ (YMABannerAdSize * _Nonnull)fixedSizeWithWidth:(CGFloat)width height:(CGFloat)height SWIFT_WARN_UNUSED_RESULT;
/// Creates an object of the YMABannerAdSize class with the specified maximum height and width of the banner.
/// warning:
/// If the actual size of the banner is less than the size of the container,
/// an adaptive layer is drawn under the banner.
/// \param width Width of the banner.
///
/// \param height Maximum height available for an adaptive banner.
///
///
/// returns:
/// An object of the <code>YMABannerAdSize</code> class with the specified maximum size of the banner.
+ (YMABannerAdSize * _Nonnull)inlineSizeWithWidth:(CGFloat)width maxHeight:(CGFloat)height SWIFT_WARN_UNUSED_RESULT;
/// Creates an object of the <code>YMABannerAdSize</code> class with the specified width of the banner.
/// remark:
/// Returns sticky banner size with the given width.
/// \param width Width of the banner.
///
///
/// returns:
/// An object of the <code>YMABannerAdSize</code> class with the specified width of the sticky banner
+ (YMABannerAdSize * _Nonnull)stickySizeWithContainerWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
@end

@class YMABidderTokenRequestConfiguration;

/// Class contains logic that creates a bidder token to be used in the mediation.
/// Bidder token is generated asynchronously.
SWIFT_CLASS("_TtC15YandexMobileAds20YMABidderTokenLoader")
@interface YMABidderTokenLoader : NSObject
- (nonnull instancetype)init;
/// Creates bidder token and dispatches results into completionHandler.
/// \param requestConfiguration request configuration for generating bidder token.
///
/// \param completionHandler bidder token loading handler.
///
- (void)loadBidderTokenWithRequestConfiguration:(YMABidderTokenRequestConfiguration * _Nonnull)requestConfiguration completionHandler:(void (^ _Nonnull)(NSString * _Nullable))completionHandler;
- (void)loadBidderTokenWithCompletionHandler:(void (^ _Nonnull)(NSString * _Nullable))completionHandler SWIFT_DEPRECATED_MSG("Use loadBidderToken(requestConfiguration:completionHandler:) instead.");
@end


/// A class with data for generating bidder token.
SWIFT_CLASS("_TtC15YandexMobileAds34YMABidderTokenRequestConfiguration")
@interface YMABidderTokenRequestConfiguration : NSObject
/// A type of ad.
@property (nonatomic, readonly) enum YMAAdType adType;
/// A size of the banner if the type of ad is a banner.
@property (nonatomic, strong) YMABannerAdSize * _Nullable bannerAdSize;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Initializes a new object of the <code>BidderTokenRequestConfiguration</code> class.
/// \param adType A type of ad.
///
///
/// returns:
/// An object of the BidderTokenRequestConfiguration class, configuration for generating bidder token.
- (nonnull instancetype)initWithAdType:(enum YMAAdType)adType;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class YMALabelAppearance;
@class YMAMutableButtonAppearance;

/// A class with fixed settings for the standard button appearance.
/// remark:
/// If you want to edit the standard appearance settings,
/// use the <code>YMAMutableNativeTemplateAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds19YMAButtonAppearance")
@interface YMAButtonAppearance : NSObject <NSCopying, NSMutableCopying>
/// Settings for the button label.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nonnull textAppearance;
/// Label color when the button is clicked.
@property (nonatomic, readonly, strong) UIColor * _Nonnull highlightedTextColor;
/// The color of the button background in its normal state.
@property (nonatomic, readonly, strong) UIColor * _Nonnull normalColor;
/// The color of the button background when clicked.
@property (nonatomic, readonly, strong) UIColor * _Nonnull highlightedColor;
/// The color of the button border.
@property (nonatomic, readonly, strong) UIColor * _Nonnull borderColor;
/// The thickness of the button border.
@property (nonatomic, readonly) CGFloat borderWidth;
/// Corresponding mutable representation of current button appearance.
@property (nonatomic, readonly, strong) YMAMutableButtonAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
/// Creates an object of the <code>YMAButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param highlightedTextColor Label color when the button is clicked.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
/// Creates an object of the <code>YMAButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
+ (nonnull instancetype)appearanceWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth SWIFT_WARN_UNUSED_RESULT;
+ (nonnull instancetype)appearanceWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


/// Device types.
SWIFT_CLASS("_TtC15YandexMobileAds13YMADeviceType")
@interface YMADeviceType : NSObject
@property (nonatomic, readonly) NSUInteger rawValue;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithRawValue:(NSUInteger)rawValue;
/// The device is not defined.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMADeviceType * _Nonnull none;)
+ (YMADeviceType * _Nonnull)none SWIFT_WARN_UNUSED_RESULT;
/// Real device.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMADeviceType * _Nonnull hardware;)
+ (YMADeviceType * _Nonnull)hardware SWIFT_WARN_UNUSED_RESULT;
/// A device simulator.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMADeviceType * _Nonnull simulator;)
+ (YMADeviceType * _Nonnull)simulator SWIFT_WARN_UNUSED_RESULT;
@end

@class YMASizeConstraint;
@class YMAMutableImageAppearance;

/// Class with standard image appearance settings (non-editable).
/// remark:
/// If you want to edit the settings of the standard appearance,
/// use the <code>YMAMutableImageAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds18YMAImageAppearance")
@interface YMAImageAppearance : NSObject <NSCopying, NSMutableCopying>
/// Limits the width of the image.
@property (nonatomic, readonly, strong) YMASizeConstraint * _Nonnull widthConstraint;
/// Corresponding mutable representation of current image appearance.
@property (nonatomic, readonly, strong) YMAMutableImageAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>ImageAppearance</code> class,
/// i.e., an image with the specified sizing constraint.
/// \param widthConstraint Limits the width of the image.
///
///
/// returns:
/// Configured image appearance.
- (nonnull instancetype)initWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint;
+ (nonnull instancetype)appearanceWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


/// A protocol with impression-level revenue data.
SWIFT_PROTOCOL("_TtP15YandexMobileAds17YMAImpressionData_")
@protocol YMAImpressionData <NSCoding, NSObject>
/// A raw impression-level revenue data, string with json.
@property (nonatomic, readonly, copy) NSString * _Nonnull rawData;
@end

@protocol YMAInterstitialAdDelegate;

/// This class is responsible for showing an interstitial ad.
SWIFT_CLASS("_TtC15YandexMobileAds17YMAInterstitialAd")
@interface YMAInterstitialAd : NSObject
/// Information data for ad
@property (nonatomic, readonly, strong) YMAAdInfo * _Nullable adInfo;
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAInterstitialAdDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Use this method to display an interstitial ad after preloading.
/// \param viewController An object of the <code>UIViewController</code> class, which is used to display an interstitial ad.
///
- (void)showFromViewController:(UIViewController * _Nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds25YMAInterstitialAdDelegate_")
@protocol YMAInterstitialAdDelegate <NSObject>
@optional
/// Notifies that the ad can’t be displayed.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)interstitialAd:(YMAInterstitialAd * _Nonnull)interstitialAd didFailToShowWithError:(NSError * _Nonnull)error;
/// Called after the interstitial ad shows.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
- (void)interstitialAdDidShow:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Called after dismissing the interstitial ad.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
- (void)interstitialAdDidDismiss:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Notifies that the user has clicked on the ad.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
- (void)interstitialAdDidClick:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Notifies delegate when an impression was tracked.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)interstitialAd:(YMAInterstitialAd * _Nonnull)interstitialAd didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMAInterstitialAdLoaderDelegate;

/// This class is responsible for loading an interstitial ad.
SWIFT_CLASS("_TtC15YandexMobileAds23YMAInterstitialAdLoader")
@interface YMAInterstitialAdLoader : NSObject
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAInterstitialAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param request Request configuration for targeting.
///
- (void)loadAdWithRequestConfiguration:(YMAAdRequestConfiguration * _Nonnull)request;
/// . Cancel the ad loading, that was launched in loadAdWithRequestConfiguration:requestConfiguration
- (void)cancelLoading;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds31YMAInterstitialAdLoaderDelegate_")
@protocol YMAInterstitialAdLoaderDelegate <NSObject>
/// Notifies that the ad loaded successfully.
/// \param adLoader A reference to an object of the <code>YMAInterstitialAdLoader</code> class that invoked the method.
///
/// \param interstitialAd Interstitial ad that is loaded and ready to be displayed.
///
- (void)interstitialAdLoader:(YMAInterstitialAdLoader * _Nonnull)adLoader didLoad:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Notifies that the ad failed to load.
/// \param adLoader A reference to an object of the <code>InterstitialAdLoader</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)interstitialAdLoader:(YMAInterstitialAdLoader * _Nonnull)adLoader didFailToLoadWithError:(YMAAdRequestError * _Nonnull)error;
@end

@class UIFont;
@class YMAMutableLabelAppearance;

/// A class with fixed settings for the standard text appearance: font name, size, and color.
/// remark:
/// If you want to edit the settings of the standard appearance,
/// use the <code>YMAMutableLabelAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds18YMALabelAppearance")
@interface YMALabelAppearance : NSObject <NSCopying, NSMutableCopying>
/// Font settings: name and size.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// Text color.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// Corresponding mutable representation of current label appearance.
@property (nonatomic, readonly, strong) YMAMutableLabelAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>LabelAppearance</code> class with the text settings.
/// \param font Font settings: name and size.
///
/// \param textColor Text color.
///
///
/// returns:
/// The configured text appearance (the specified font and color).
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor;
/// Creates an object of the <code>LabelAppearance</code> class with the text settings.
/// \param font Font settings: name and size.
///
/// \param textColor Text color.
///
///
/// returns:
/// The configured text appearance (the specified font and color).
+ (nonnull instancetype)appearanceWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


SWIFT_CLASS("_TtC15YandexMobileAds12YMAMobileAds")
@interface YMAMobileAds : NSObject
/// Enables logging. By default, logging is disabled.
+ (void)enableLogging;
/// Returns the SDK version in the X.YY format.
///
/// returns:
/// The version of the SDK in X.YY format.
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
+ (YMAAudioSessionManager * _Nonnull)audioSessionManager SWIFT_WARN_UNUSED_RESULT;
/// The SDK automatically collects location data if the user allowed the app to track the location.
/// This option is enabled by default.
/// \param enabled Enables or disables collecting location data.
///
+ (void)setLocationTrackingEnabled:(BOOL)enabled;
/// Enables/disables the incorrect integration indicator for native advertising.
/// remark:
/// By default, the indicator of incorrect integration (for native ads) is enabled
/// for the <code>DeviceType.simulator</code> device type (the types are listed in YMADeviceTypes).
/// To disable the indicator, pass the <code>YMADeviceType.none</code> value.
/// @warning The indicator is not displayed in apps installed from the AppStore,
/// regardless of the <code>deviceType</code> parameter value.
/// \param deviceType The type of a device for displaying the incorrect integration indicator.
///
+ (void)enableVisibilityErrorIndicatorForDeviceType:(YMADeviceType * _Nonnull)deviceType;
/// Set a value indicating whether user from GDPR region allowed to collect personal data
/// which is used for analytics and ad targeting.
/// If the value is set to <code>NO</code> personal data will not be collected. The default value is <code>NO</code>.
/// \param consent <code>YES</code> if user provided consent to collect personal data, otherwise <code>NO</code>.
///
+ (void)setUserConsent:(BOOL)consent;
/// Initializes the Yandex Mobile Ads SDK internal state.
/// \param completionHandler The block that will be executed after sdk initialization.
///
+ (void)initializeSDKWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end













/// An editable version of the <code>AdRequest</code> class with data for a targeted ad request.
SWIFT_CLASS("_TtC15YandexMobileAds19YMAMutableAdRequest")
@interface YMAMutableAdRequest : YMAAdRequest
/// User age.
@property (nonatomic, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, copy) NSString * _Nullable biddingData;
/// Header bidding data for ad loading from mediation, that contains bid id.
@property (nonatomic, copy) NSString * _Nullable headerBiddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding immutable representation of current ad request.
@property (nonatomic, readonly, strong) YMAAdRequest * _Nonnull request;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `request` property instead.");
@end


/// An editable version of the <code>YMAAdRequestConfiguration</code> class configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds32YMAMutableAdRequestConfiguration")
@interface YMAMutableAdRequestConfiguration : YMAAdRequestConfiguration
/// User age.
@property (nonatomic, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding immutable representation of current ad request configuration.
@property (nonatomic, readonly, strong) YMAAdRequestConfiguration * _Nonnull request;
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `request` property instead.");
@end


/// Class with editable settings for the standard button appearance.
SWIFT_CLASS("_TtC15YandexMobileAds26YMAMutableButtonAppearance")
@interface YMAMutableButtonAppearance : YMAButtonAppearance
/// Settings for the button label.
@property (nonatomic, strong) YMALabelAppearance * _Nonnull textAppearance;
/// Label color when the button is clicked.
@property (nonatomic, strong) UIColor * _Nonnull highlightedTextColor;
/// The color of the button background in its normal state.
@property (nonatomic, strong) UIColor * _Nonnull normalColor;
/// The color of the button background when clicked.
@property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
/// The color of the button border.
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// The thickness of the button border.
@property (nonatomic) CGFloat borderWidth;
/// Corresponding immutable representation of current label appearance.
@property (nonatomic, readonly, strong) YMAButtonAppearance * _Nonnull buttonAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
/// Creates an object of the <code>YMAMutableButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param highlightedTextColor Label color when the button is clicked.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `buttonAppearance` property instead.");
@end


/// Class with editable settings for the standard image appearance.
SWIFT_CLASS("_TtC15YandexMobileAds25YMAMutableImageAppearance")
@interface YMAMutableImageAppearance : YMAImageAppearance
/// Limits the width of the image.
@property (nonatomic, strong) YMASizeConstraint * _Nonnull widthConstraint;
/// Corresponding immutable representation of current image appearance.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nonnull imageAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableImageAppearance</code> class,
/// i.e., an image with the specified sizing constraint.
/// \param widthConstraint Limits the width of the image.
///
///
/// returns:
/// Configured image appearance.
- (nonnull instancetype)initWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `imageAppearance` property instead.");
@end


/// Class with editable text settings.
SWIFT_CLASS("_TtC15YandexMobileAds25YMAMutableLabelAppearance")
@interface YMAMutableLabelAppearance : YMALabelAppearance
/// Font settings: name and size.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// Text color.
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// Corresponding immutable representation of current label appearance.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nonnull labelAppearance;
/// Creates an object of the <code>YMAMutableLabelAppearance</code> class with the text settings.
/// \param font Font settings: name and size.
///
/// \param textColor Text color.
///
///
/// returns:
/// The configured text appearance (the specified font and color).
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `labelAppearance` property instead.");
@end

@class YMAMutableNativeAdRequestConfiguration;

/// This class is responsible for configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds31YMANativeAdRequestConfiguration")
@interface YMANativeAdRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitID;
/// User age.
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, readonly, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic, readonly) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Flag for automatic image loading. Acceptable values: <code>true</code> – Load automatically; <code>false</code> – Load manually.
/// warning:
/// If the app simultaneously stores links to a large number of ads,
/// we recommend using manual image loading.
@property (nonatomic, readonly) BOOL shouldLoadImagesAutomatically;
/// Corresponding mutable representation of current native ad request configuration.
@property (nonatomic, readonly, strong) YMAMutableNativeAdRequestConfiguration * _Nonnull mutableConfiguration;
/// Initializes a new object of the <code>YMANativeAdRequestConfiguration</code> class.
/// \param adUnitID The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format,
/// which is assigned in the Partner interface.
///
///
/// returns:
/// An object of the <code>YMANativeAdRequestConfiguration</code> class, configuration for loading native ads.
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableConfiguration` property instead.");
@end


/// An editable version of the <code>YMANativeAdRequestConfiguration</code> class configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds38YMAMutableNativeAdRequestConfiguration")
@interface YMAMutableNativeAdRequestConfiguration : YMANativeAdRequestConfiguration
/// User age.
@property (nonatomic, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
@property (nonatomic) BOOL shouldLoadImagesAutomatically;
/// Corresponding immutable representation of current native ad request configuration.
@property (nonatomic, readonly, strong) YMANativeAdRequestConfiguration * _Nonnull request;
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `request` property instead.");
@end

@class YMARatingAppearance;
@class YMAMutableNativeTemplateAppearance;

/// Class with the default (fixed) settings for the standard ad layout.
/// If you want to edit the default settings of the standard appearance,
/// use the <code>YMAMutableNativeTemplateAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds27YMANativeTemplateAppearance")
@interface YMANativeTemplateAppearance : NSObject <NSCopying, NSMutableCopying>
/// Width of the border.
@property (nonatomic, readonly) CGFloat borderWidth;
/// Color of the border.
@property (nonatomic, readonly, strong) UIColor * _Nonnull borderColor;
/// Background color.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// Horizontal (left and right) margins between the content and the edges of the ad.
/// remark:
/// Measured in logical pixels.
@property (nonatomic, readonly) YMAHorizontalOffset contentPadding;
/// The horizontal margins around the image, relative to the ad content.
/// remark:
/// The left margin is relative to the left edge of the content.
/// The right margin is the gap between the right edge of the image and the left edge of the text.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic, readonly) YMAHorizontalOffset imageMargins;
/// Appearance settings for the text with age restrictions.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable ageAppearance;
/// Appearance settings for the main ad text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable bodyAppearance;
/// Appearance settings for a call-to-action button (for example, the Install button).
@property (nonatomic, readonly, strong) YMAButtonAppearance * _Nullable callToActionAppearance;
/// Appearance settings for the domain text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable domainAppearance;
/// Appearance settings for the favicon.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nullable faviconAppearance;
/// Appearance settings for the feedback.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nullable feedbackAppearance;
/// Appearance settings for the image.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nullable imageAppearance;
/// Appearance settings for the rating.
@property (nonatomic, readonly, strong) YMARatingAppearance * _Nullable ratingAppearance;
/// Appearance settings for the ad network text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable sponsoredAppearance;
/// Appearance settings for the ad title text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable titleAppearance;
/// Appearance settings for the number of app reviews.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable reviewCountAppearance;
/// Appearance settings for the warning text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable warningAppearance;
/// Corresponding mutable representation of current native template appearance.
@property (nonatomic, readonly, strong) YMAMutableNativeTemplateAppearance * _Nonnull mutableAppearance;
/// Creates an object with default settings for the standard design.
///
/// returns:
/// Returns an object with the default settings for the standard design.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMANativeTemplateAppearance * _Nonnull defaultAppearance;)
+ (YMANativeTemplateAppearance * _Nonnull)defaultAppearance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


SWIFT_CLASS("_TtC15YandexMobileAds34YMAMutableNativeTemplateAppearance")
@interface YMAMutableNativeTemplateAppearance : YMANativeTemplateAppearance
/// Width of the border.
@property (nonatomic) CGFloat borderWidth;
/// Color of the border.
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// Background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// Horizontal (left and right) margins between the content and the edges of the ad.
/// remark:
/// Measured in logical pixels.
@property (nonatomic) YMAHorizontalOffset contentPadding;
/// The horizontal margins around the image, relative to the ad content.
/// remark:
/// The left margin is relative to the left edge of the content.
/// The right margin is the gap between the right edge of the image and the left edge of the text.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic) YMAHorizontalOffset imageMargins;
/// Appearance settings for the text with age restrictions.
@property (nonatomic, strong) YMALabelAppearance * _Nullable ageAppearance;
/// Appearance settings for the main ad text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable bodyAppearance;
/// Appearance settings for a call-to-action button (for example, the Install button).
@property (nonatomic, strong) YMAButtonAppearance * _Nullable callToActionAppearance;
/// Appearance settings for the domain text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable domainAppearance;
/// Appearance settings for the favicon.
@property (nonatomic, strong) YMAImageAppearance * _Nullable faviconAppearance;
/// Appearance settings for the feedback.
@property (nonatomic, strong) YMAImageAppearance * _Nullable feedbackAppearance;
/// Appearance settings for the image.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic, strong) YMAImageAppearance * _Nullable imageAppearance;
/// Appearance settings for the rating.
@property (nonatomic, strong) YMARatingAppearance * _Nullable ratingAppearance;
/// Appearance settings for the ad network text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable sponsoredAppearance;
/// Appearance settings for the ad title text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable titleAppearance;
/// Appearance settings for the number of app reviews.
@property (nonatomic, strong) YMALabelAppearance * _Nullable reviewCountAppearance;
/// Appearance settings for the warning text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable warningAppearance;
/// Corresponding immutable representation of current native template appearance.
@property (nonatomic, readonly, strong) YMANativeTemplateAppearance * _Nonnull appearance;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `appearance` property instead.");
@end

@class YMAMutableRatingAppearance;

/// A class with fixed settings for the standard rating appearance.
/// remark:
/// If you want to edit the settings of the standard appearance,
/// use the <code>YMAMutableRatingAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds19YMARatingAppearance")
@interface YMARatingAppearance : NSObject <NSCopying, NSMutableCopying>
/// The outline color of an empty (unfilled) star.
@property (nonatomic, readonly, strong) UIColor * _Nonnull emptyStarColor;
/// The color of a filled star.
@property (nonatomic, readonly, strong) UIColor * _Nonnull filledStarColor;
/// The preferred size of a star.
/// warning:
/// If the use of the preferred size makes the rating too large for the space reserved for it,
/// the maximum allowed size is used instead.
@property (nonatomic, readonly) CGFloat preferredStarSize;
/// Corresponding mutable representation of current rating appearance.
@property (nonatomic, readonly, strong) YMAMutableRatingAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>RatingAppearance</code> class,
/// i.e., a rating with the specified appearance (outline color, size, and other settings).
/// \param emptyStarColor The outline color of an empty (unfilled) star.
///
/// \param filledStarColor The color of a filled star.
///
/// \param starSize The preferred size of a star.
///
///
/// returns:
/// Configured rating appearance.
- (nonnull instancetype)initWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize;
/// Creates an object of the <code>RatingAppearance</code> class,
/// i.e., a rating with the specified appearance (outline color, size, and other settings).
/// \param emptyStarColor The outline color of an empty (unfilled) star.
///
/// \param filledStarColor The color of a filled star.
///
/// \param starSize The preferred size of a star.
///
///
/// returns:
/// Configured rating appearance.
+ (nonnull instancetype)appearanceWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


/// A class with editable settings for the standard rating appearance.
SWIFT_CLASS("_TtC15YandexMobileAds26YMAMutableRatingAppearance")
@interface YMAMutableRatingAppearance : YMARatingAppearance
/// Text color.
@property (nonatomic, strong) UIColor * _Nonnull emptyStarColor;
@property (nonatomic, strong) UIColor * _Nonnull filledStarColor;
@property (nonatomic) CGFloat preferredStarSize;
/// Corresponding immutable representation of current rating appearance.
@property (nonatomic, readonly, strong) YMARatingAppearance * _Nonnull ratingAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableRatingAppearance</code> class,
/// i.e., a rating with the specified appearance (outline color, size, and other settings).
/// \param emptyStarColor The outline color of an empty (unfilled) star.
///
/// \param filledStarColor The color of a filled star.
///
/// \param starSize The preferred size of a star.
///
///
/// returns:
/// Configured rating appearance.
- (nonnull instancetype)initWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `ratingAppearance` property instead.");
@end

enum YMASizeConstraintType : NSInteger;
@class YMAMutableSizeConstraint;

/// A class with object sizing constraints.
/// remark:
/// If you want to edit the object sizing constraints, use the <code>YMAMutableSizeConstraint</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds17YMASizeConstraint")
@interface YMASizeConstraint : NSObject <NSCopying, NSMutableCopying>
/// Object sizing constraint.
/// remark:
/// Acceptable values are listed in <code>YMASizeConstraintType</code> enum.
@property (nonatomic, readonly) enum YMASizeConstraintType type;
/// The constraint value. The meaning of the value depends on the <code>type</code> property.
@property (nonatomic, readonly) CGFloat value;
/// Corresponding mutable representation of current size constraint.
@property (nonatomic, readonly, strong) YMAMutableSizeConstraint * _Nonnull mutableConstraint;
- (nonnull instancetype)init;
/// Creates an object of the <code>SizeConstraint</code> class, i.e., the object sizing constraint.
/// \param type Object sizing constraint. Acceptable values are listed in <code>SizeConstraintType</code>.
///
/// \param value The constraint value. The meaning of the value depends on the <code>type</code> property.
///
///
/// returns:
/// The specified object sizing constraint.
- (nonnull instancetype)initWithType:(enum YMASizeConstraintType)type value:(CGFloat)value;
/// Creates an object of the <code>SizeConstraint</code> class, i.e., the object sizing constraint.
/// \param type Object sizing constraint. Acceptable values are listed in <code>SizeConstraintType</code>.
///
/// \param value The constraint value. The meaning of the value depends on the <code>type</code> property.
///
///
/// returns:
/// The specified object sizing constraint.
+ (nonnull instancetype)constraintWithType:(enum YMASizeConstraintType)type value:(CGFloat)value SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableConstraint` property instead.");
@end


/// A class with editable object sizing constraints.
SWIFT_CLASS("_TtC15YandexMobileAds24YMAMutableSizeConstraint")
@interface YMAMutableSizeConstraint : YMASizeConstraint
/// Object sizing constraint.
/// remark:
/// Acceptable values are listed in <code>YMASizeConstraintType</code>.
@property (nonatomic) enum YMASizeConstraintType type;
/// The constraint value. The meaning of the value depends on the <code>type</code> property.
@property (nonatomic) CGFloat value;
/// Corresponding immutable representation of current size constraint.
@property (nonatomic, readonly, strong) YMASizeConstraint * _Nonnull constraint;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableSizeConstraint</code> class, i.e., the object sizing constraint.
/// \param type Object sizing constraint. Acceptable values are listed in <code>YMASizeConstraintType</code>.
///
/// \param value The constraint value. The meaning of the value depends on the <code>type</code> property.
///
///
/// returns:
/// The specified object sizing constraint.
- (nonnull instancetype)initWithType:(enum YMASizeConstraintType)type value:(CGFloat)value;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `constraint` property instead.");
@end

enum YMANativeAdType : NSInteger;
@protocol YMANativeAdDelegate;
@class YMANativeAdAssets;
@protocol YMANativeAdImageLoadingObserver;
@class YMANativeAdView;

/// The protocol provides methods for managing an ad and getting the values of the ad assets.
SWIFT_PROTOCOL("_TtP15YandexMobileAds11YMANativeAd_")
@protocol YMANativeAd <NSObject>
/// Type of native ad. For acceptable values, see <code>YMANativeAdType</code>.
@property (nonatomic, readonly) enum YMANativeAdType adType;
/// An object implementing the <code>YMANativeAdDelegate</code> protocol
/// that receives events triggered by the user’s interaction with the ad.
@property (nonatomic, strong) id <YMANativeAdDelegate> _Nullable delegate;
/// Any string in the ad (set in the Partner interface).
/// warning:
/// This property is only used for working with ADFOX.
@property (nonatomic, readonly, copy) NSString * _Nullable info;
/// An array with nested ads.
@property (nonatomic, readonly, copy) NSArray<id <YMANativeAd>> * _Nonnull ads;
/// An object with ad assets.
///
/// returns:
/// Returns an object containing the ad assets.
- (YMANativeAdAssets * _Nonnull)adAssets SWIFT_WARN_UNUSED_RESULT;
/// Loads images if manual loading is selected.
/// warning:
/// All images are cached, but they can be deleted at any time,
/// so you need to call this method before every ad impression.
- (void)loadImages;
/// Adds an observer that receives notifications about the image loading process.
/// \param observer The observer of the image loading process.
///
- (void)addImageLoadingObserver:(id <YMANativeAdImageLoadingObserver> _Nonnull)observer;
/// Removes the observer that receives notifications about the image loading process.
/// \param observer The observer of the image loading process.
///
- (void)removeImageLoadingObserver:(id <YMANativeAdImageLoadingObserver> _Nonnull)observer;
/// Sets values of all ad assets to native ad view, installs impression and click handlers.
/// \param adView <code>YMANativeAdView</code> with views for ad assets.
///
/// \param error Binding error. - seealso:  <code>YMANativeAdErrorCode</code> for error codes.
///
///
/// returns:
/// <code>true</code> if binding succeeded, otherwise <code>false</code>.
- (BOOL)bindWithAdView:(YMANativeAdView * _Nonnull)adView error:(NSError * _Nullable * _Nullable)error;
/// Configures views for native ads displlay in slider.
/// \param sliderView Root slider ad view with general assets
///
/// \param error Binding error. - seealso: <code>YMANativeAdErrorCode</code> for error codes.
///
///
/// returns:
/// <code>true</code> if binding succeeded, otherwise <code>false</code>.
- (BOOL)bindAdToSliderView:(YMANativeAdView * _Nonnull)sliderView error:(NSError * _Nullable * _Nullable)error;
@end

@class YMANativeAdImage;
@class YMANativeAdMedia;

/// Class with native ad assets.
SWIFT_CLASS("_TtC15YandexMobileAds17YMANativeAdAssets")
@interface YMANativeAdAssets : NSObject
/// Age restrictions.
@property (nonatomic, copy) NSString * _Nullable age;
/// The main ad text.
@property (nonatomic, copy) NSString * _Nullable body;
/// The call to action.
@property (nonatomic, copy) NSString * _Nullable callToAction;
/// The domain.
@property (nonatomic, copy) NSString * _Nullable domain;
/// The web page’s favicon.
@property (nonatomic, strong) YMANativeAdImage * _Nullable favicon;
/// Reports about the necessity to show <code>feedbackButton</code>
@property (nonatomic) BOOL feedbackAvailable;
/// The app’s icon.
@property (nonatomic, strong) YMANativeAdImage * _Nullable icon;
/// The main image.
@property (nonatomic, strong) YMANativeAdImage * _Nullable image;
/// Ad media.
@property (nonatomic, strong) YMANativeAdMedia * _Nullable media;
/// The price of the advertised app.
@property (nonatomic, copy) NSString * _Nullable price;
/// The app’s rating.
@property (nonatomic, strong) NSNumber * _Nullable rating;
/// The number of app reviews.
@property (nonatomic, copy) NSString * _Nullable reviewCount;
/// Data on the ad network.
@property (nonatomic, copy) NSString * _Nullable sponsored;
/// The ad title.
@property (nonatomic, copy) NSString * _Nullable title;
/// The warning.
@property (nonatomic, copy) NSString * _Nullable warning;
- (nonnull instancetype)init;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds19YMANativeAdDelegate_")
@protocol YMANativeAdDelegate <NSObject>
@optional
/// <code>UIViewController</code> object that is used for showing a modal controller
/// in response to the user’s interaction with the banner.
///
/// returns:
/// <code>UIViewController</code> object that is used for showing a modal controller
/// in response to the user’s interaction with the banner.
- (UIViewController * _Nullable)viewControllerForPresentingModalView SWIFT_WARN_UNUSED_RESULT;
/// Notifies that the user has clicked on the ad.
/// \param ad A reference to the object that invoked the method.
///
- (void)nativeAdDidClick:(id <YMANativeAd> _Nonnull)ad;
/// Notifies that the user switched from the ad to an app (for example, the browser).
/// \param ad A reference to the object that invoked the method.
///
- (void)nativeAdWillLeaveApplication:(id <YMANativeAd> _Nonnull)ad;
/// Notifies that the ad will show the modal <code>UIViewController</code>
/// in response to the user interacting with the banner.
/// \param ad A reference to the object that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)nativeAd:(id <YMANativeAd> _Nonnull)ad willPresentScreen:(UIViewController * _Nullable)viewController;
/// Notifies that the ad finished showing the modal <code>UIViewController</code>
/// in response to the user interacting with the banner.
/// \param ad A reference to the object that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)nativeAd:(id <YMANativeAd> _Nonnull)ad didDismissScreen:(UIViewController * _Nullable)viewController;
/// Notifies delegate when an impression was tracked.
/// \param ad A reference to the object that invoked the method.
///
/// \param impressionData Ad impression-level revenue data
///
- (void)nativeAd:(id <YMANativeAd> _Nonnull)ad didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
/// Notifies that the user has chosen a reason for closing the ad and the ad must be hidden.
/// warning:
/// Advertising will not be hidden.
/// The developer must determine what to do with the ad after the reason for closing it is chosen.
/// \param ad A reference to the object that invoked the method.
///
- (void)closeNativeAd:(id <YMANativeAd> _Nonnull)ad;
@end

@class UIImage;

/// remark:
/// The image sizes are always available, but the images themselves are only available after loading.
SWIFT_CLASS("_TtC15YandexMobileAds16YMANativeAdImage")
@interface YMANativeAdImage : NSObject
/// Image size.
@property (nonatomic, readonly) CGSize size;
/// Loaded image. The image is available only after loading.
@property (nonatomic, readonly, strong) UIImage * _Nullable imageValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This protocol is responsible for sending messages about image loading.
SWIFT_PROTOCOL("_TtP15YandexMobileAds31YMANativeAdImageLoadingObserver_")
@protocol YMANativeAdImageLoadingObserver <NSObject>
/// Notifies that the image is loaded successfully.
/// \param ad A reference to the object that invoked the method.
///
- (void)nativeAdDidFinishLoadingImages:(id <YMANativeAd> _Nonnull)ad;
@end

@protocol YMANativeAdLoaderDelegate;

/// This class is responsible for loading native ads.
SWIFT_CLASS("_TtC15YandexMobileAds17YMANativeAdLoader")
@interface YMANativeAdLoader : NSObject
/// Monitors the process of loading native ads.
@property (nonatomic, weak) id <YMANativeAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param requestConfiguration Request configuration for targeting.
///
- (void)loadAdWithRequestConfiguration:(YMANativeAdRequestConfiguration * _Nonnull)requestConfiguration;
@end


/// The protocol defines the methods of a delegate that monitors the ad loading process.
/// remark:
/// The methods are invoked by an object of the <code>NativeAdLoader</code> class.
SWIFT_PROTOCOL("_TtP15YandexMobileAds25YMANativeAdLoaderDelegate_")
@protocol YMANativeAdLoaderDelegate <NSObject>
/// Notifies that a native ad is loaded.
/// \param loader The loader that sends the message.
///
/// \param ad Native ad that is loaded and ready to be displayed.
///
- (void)nativeAdLoader:(YMANativeAdLoader * _Nonnull)loader didLoadAd:(id <YMANativeAd> _Nonnull)ad;
/// Notifies that the ad failed to load.
/// \param loader The loader that sends the message.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>)
///
- (void)nativeAdLoader:(YMANativeAdLoader * _Nonnull)loader didFailLoadingWithError:(NSError * _Nonnull)error;
@end


/// <code>YMANativeAdMedia</code> represents media asset.
SWIFT_CLASS("_TtC15YandexMobileAds16YMANativeAdMedia")
@interface YMANativeAdMedia : NSObject
/// Media aspect ratio (width/height).
@property (nonatomic, readonly) CGFloat aspectRatio;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Types of native advertising.
typedef SWIFT_ENUM(NSInteger, YMANativeAdType, open) {
/// Content type.
  YMANativeAdTypeContent = 0,
/// App Install type.
  YMANativeAdTypeAppInstall = 1,
/// Media type.
  YMANativeAdTypeMedia = 2,

};


SWIFT_CLASS("_TtC15YandexMobileAds26YMANativeAdVideoController")
@interface YMANativeAdVideoController : NSObject
- (nonnull instancetype)init;
- (void)pause;
- (void)resume;
@end


/// This protocol allows to get <code>YMANativeAdVideoController</code> from <code>NativeAd</code>
SWIFT_PROTOCOL("_TtP15YandexMobileAds34YMANativeAdVideoControllerProvider_")
@protocol YMANativeAdVideoControllerProvider <NSObject>
/// VideoController provides playback control for ad video.
@property (nonatomic, readonly, strong) YMANativeAdVideoController * _Nullable videoController;
@end


/// This class is a template for native advertising layout.
SWIFT_CLASS("_TtC15YandexMobileAds19YMANativeBannerView")
@interface YMANativeBannerView : UIView
/// Loaded ad.
@property (nonatomic, strong) id <YMANativeAd> _Nullable ad;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
/// Applies the appearance settings from the template.
/// \param appearance Appearance of the ad.
///
- (void)applyAppearance:(YMANativeTemplateAppearance * _Nonnull)appearance;
/// Calculates the height of the ad.
/// \param ad Loaded ad.
///
/// \param width The width of the ad.
///
/// \param appearance Appearance of the ad.
///
///
/// returns:
/// Returns the height of the ad.
+ (CGFloat)heightWithAd:(id <YMANativeAd> _Nonnull)ad width:(CGFloat)width appearance:(YMANativeTemplateAppearance * _Nullable)appearance SWIFT_WARN_UNUSED_RESULT;
@end

@protocol YMANativeBulkAdLoaderDelegate;

/// This class is responsible for loading native ads.
SWIFT_CLASS("_TtC15YandexMobileAds21YMANativeBulkAdLoader")
@interface YMANativeBulkAdLoader : NSObject
/// An object that implements the <code>YMANativeBulkAdLoaderDelegate</code> protocol that tracks the progress of bulk native ad loading.
@property (nonatomic, weak) id <YMANativeBulkAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param requestConfiguration Request configuration for targeting.
///
/// \param adsCount Count of requested ads.
///
- (void)loadAdsWithRequestConfiguration:(YMANativeAdRequestConfiguration * _Nonnull)requestConfiguration adsCount:(NSInteger)adsCount;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds29YMANativeBulkAdLoaderDelegate_")
@protocol YMANativeBulkAdLoaderDelegate <NSObject>
/// Notifies that a native ads are loaded.
/// \param nativeBulkAdLoader The loader that sends the message.
///
/// \param ads Loaded native ads.
///
- (void)nativeBulkAdLoader:(YMANativeBulkAdLoader * _Nonnull)nativeBulkAdLoader didLoadAds:(NSArray<id <YMANativeAd>> * _Nonnull)ads;
/// Notifies that the ads failed to load.
/// \param nativeBulkAdLoader The loader that sends the message.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)nativeBulkAdLoader:(YMANativeBulkAdLoader * _Nonnull)nativeBulkAdLoader didFailLoadingWithError:(NSError * _Nonnull)error;
@end

/// Error description.
typedef SWIFT_ENUM(NSInteger, YMANativeErrorCode, open) {
/// Occurs when binding an ad if the <code>UIView</code> is omitted for a required asset.
  YMANativeErrorCodeNoViewForAsset = 0,
/// Occurs when the nil value is passed to the ad binding method as the <code>View</code>.
  YMANativeErrorCodeInvalidViewForBinding = 1,
};


/// <code>YMANativePromoBannerView</code> provides template for displaying promo ads.
SWIFT_CLASS("_TtC15YandexMobileAds24YMANativePromoBannerView")
@interface YMANativePromoBannerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@class YMANativeVideoPlaybackControls;

/// Objects that implement this protocol allow to set custom video playback controls;
SWIFT_PROTOCOL("_TtP15YandexMobileAds34YMANativeVideoControlsCustomizable_")
@protocol YMANativeVideoControlsCustomizable <NSObject>
/// Sets an <code>YMANativeVideoPlaybackControls</code>
/// \param videoPlaybackControls Video playback controls.
///
- (void)setVideoPlaybackControls:(YMANativeVideoPlaybackControls * _Nonnull)videoPlaybackControls;
@end

@protocol YMANativeVideoPlaybackProgressControl;
@protocol YMANativeVideoPlaybackMuteControl;

/// Class with playback controls.
SWIFT_CLASS("_TtC15YandexMobileAds30YMANativeVideoPlaybackControls")
@interface YMANativeVideoPlaybackControls : NSObject
/// nitializes an object of the <code>YMANativeVideoPlaybackControls</code> class with progress control and mute control.
/// \param progressControl An object of the <code>UIView</code> class and conform to protocol <code>YMANativeVideoPlaybackProgressControl</code>.
///
/// \param muteControl An object of the <code>UIView</code> class and conform to protocol <code>YMANativeVideoPlaybackMuteControl</code>.
///
///
/// returns:
/// An object of the <code>NativeVideoPlaybackControls</code> class with progress control and mute control.
- (nonnull instancetype)initWithProgressControl:(UIView <YMANativeVideoPlaybackProgressControl> * _Nullable)progressControl muteControl:(UIView <YMANativeVideoPlaybackMuteControl> * _Nullable)muteControl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol YMANativeVideoPlaybackMuteControlDelegate;

SWIFT_PROTOCOL("_TtP15YandexMobileAds33YMANativeVideoPlaybackMuteControl_")
@protocol YMANativeVideoPlaybackMuteControl <NSObject>
/// Delegate is notified about video playback mute control events.
@property (nonatomic, strong) id <YMANativeVideoPlaybackMuteControlDelegate> _Nullable delegate;
/// Configures a mute control with specified isMuted flag.
/// \param isMuted Flag for setting mute/unmute state.
///
- (void)configureWithIsMuted:(BOOL)isMuted;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds41YMANativeVideoPlaybackMuteControlDelegate_")
@protocol YMANativeVideoPlaybackMuteControlDelegate <NSObject>
/// Notifies that the user has clicked on mute control.
/// \param muteControl A reference to the object that invoked the method.
///
/// \param isMuted A flag for representing current mute control state.
///
- (void)muteControl:(id <YMANativeVideoPlaybackMuteControl> _Nonnull)muteControl didChangeIsMuted:(BOOL)isMuted;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds37YMANativeVideoPlaybackProgressControl_")
@protocol YMANativeVideoPlaybackProgressControl <NSObject>
/// Configures a progress control with position and duration.
/// \param position Position of current OutStream ad.
///
/// \param duration Duration of current OutStream ad.
///
- (void)configureWithPosition:(NSTimeInterval)position duration:(NSTimeInterval)duration;
/// Resets a video progress.
- (void)reset;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds9YMARating_")
@protocol YMARating <NSObject>
/// Sets the rating value in the range [0; 5].
/// \param rating The rating value in the range [0; 5].
///
- (void)setRating:(NSNumber * _Nullable)rating;
/// Returns the rating value in the range [0; 5].
///
/// returns:
/// Rating value.
- (NSNumber * _Nullable)rating SWIFT_WARN_UNUSED_RESULT;
@end



/// <code>YMAReward</code> represents reward given to the user.
SWIFT_PROTOCOL("_TtP15YandexMobileAds9YMAReward_")
@protocol YMAReward <NSObject>
/// Amount rewarded to the user.
@property (nonatomic, readonly) NSInteger amount;
/// Type of the reward.
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

@protocol YMARewardedAdDelegate;

/// This class is responsible for showing a rewarded ad.
SWIFT_CLASS("_TtC15YandexMobileAds13YMARewardedAd")
@interface YMARewardedAd : NSObject
/// Information data for ad
@property (nonatomic, readonly, strong) YMAAdInfo * _Nullable adInfo;
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMARewardedAdDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Use this method to display an rewarded ad after preloading.
/// \param viewController An object of the <code>UIViewController</code> class, which is used to display an interstitial ad.
///
- (void)showFromViewController:(UIViewController * _Nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds21YMARewardedAdDelegate_")
@protocol YMARewardedAdDelegate <NSObject>
/// Notifies that rewarded ad has rewarded the user.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
/// \param reward Reward given to the user.
///
- (void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didReward:(id <YMAReward> _Nonnull)reward;
@optional
/// Notifies that the ad can’t be displayed.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didFailToShowWithError:(NSError * _Nonnull)error;
/// Called after the rewarded ad shows.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdDidShow:(YMARewardedAd * _Nonnull)rewardedAd;
/// Called after dismissing the rewarded ad.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdDidDismiss:(YMARewardedAd * _Nonnull)rewardedAd;
/// Notifies that the user has clicked on the ad.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdDidClick:(YMARewardedAd * _Nonnull)rewardedAd;
/// Notifies delegate when an impression was tracked.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didTrackImpressionWith:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMARewardedAdLoaderDelegate;

/// This class is responsible for loading a rewarded ad.
SWIFT_CLASS("_TtC15YandexMobileAds19YMARewardedAdLoader")
@interface YMARewardedAdLoader : NSObject
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMARewardedAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param request Request configuration for targeting.
///
- (void)loadAdWithRequestConfiguration:(YMAAdRequestConfiguration * _Nonnull)request;
/// . Cancel the ad loading, that was launched in loadAdWithRequestConfiguration:requestConfiguration
- (void)cancelLoading;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds27YMARewardedAdLoaderDelegate_")
@protocol YMARewardedAdLoaderDelegate <NSObject>
/// Notifies that the ad loaded successfully.
/// \param adLoader A reference to an object of the <code>YMARewardedAdLoader</code> class that invoked the method.
///
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdLoader:(YMARewardedAdLoader * _Nonnull)adLoader didLoad:(YMARewardedAd * _Nonnull)rewardedAd;
/// Notifies that the ad failed to load.
/// \param adLoader A reference to an object of the <code>RewardedAdLoader</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)rewardedAdLoader:(YMARewardedAdLoader * _Nonnull)adLoader didFailToLoadWithError:(YMAAdRequestError * _Nonnull)error;
@end


/// Object sizing constraint.
typedef SWIFT_ENUM(NSInteger, YMASizeConstraintType, open) {
/// Fixed width or height.
  YMASizeConstraintTypeFixed = 0,
/// The ratio of the size of something to the size of the entire contents.
/// The actual size of the content is not considered.
  YMASizeConstraintTypeFixedBannerRatio = 1,
/// The ratio of the size of something to the size of the entire content,
/// but no more than the actual size of the content.
  YMASizeConstraintTypePreferredBannerRatio = 2,
};


/// Version information.
SWIFT_CLASS("_TtC15YandexMobileAds10YMAVersion")
@interface YMAVersion : NSObject
/// Object describing current sdk verision.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMAVersion * _Nonnull currentVersion;)
+ (YMAVersion * _Nonnull)currentVersion SWIFT_WARN_UNUSED_RESULT;
/// Major version.
@property (nonatomic, readonly) NSInteger major;
/// Minor version.
@property (nonatomic, readonly) NSInteger minor;
/// Patch version.
@property (nonatomic, readonly) NSInteger patch;
/// Prereleased identifiers.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull prereleaseIdentifiers;
/// Build metadate identifiers.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull buildMetadataIdentifiers;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol YMAVideoDelegate;

/// <code>YMAVideoController</code> manages video content of the ad.
SWIFT_CLASS("_TtC15YandexMobileAds18YMAVideoController")
@interface YMAVideoController : NSObject
/// Delegate is notified about video playback events.
@property (nonatomic, weak) id <YMAVideoDelegate> _Nullable delegate;
- (nonnull instancetype)init;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds16YMAVideoDelegate_")
@protocol YMAVideoDelegate <NSObject>
@optional
/// Notifies delegate when video finished playing.
/// \param videoController Video controller related to video.
///
- (void)videoControllerDidFinishPlayingVideo:(YMAVideoController * _Nonnull)videoController;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef YANDEXMOBILEADS_SWIFT_H
#define YANDEXMOBILEADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#import <YandexMobileAds/YandexMobileAds.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="YandexMobileAds",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@interface NSError (SWIFT_EXTENSION(YandexMobileAds))
/// . Is Yandex Mobile Native Ads error
@property (nonatomic, readonly) BOOL isYandexMobileNativeAdsError;
@end


@interface NSError (SWIFT_EXTENSION(YandexMobileAds))
/// Is <code>Yandex Mobile Ads</code> library error.
@property (nonatomic, readonly) BOOL isYandexMobileAdsError;
@end

/// Error description.
typedef SWIFT_ENUM(NSInteger, YMAAdErrorCode, open) {
/// The <code>AdUnitID</code> was omitted when loading the ad.
  YMAAdErrorCodeEmptyAdUnitID = 0,
/// An invalid <code>Application ID</code> was specified.
  YMAAdErrorCodeInvalidUUID = 1,
/// The <code>AdUnitID</code> specified when loading the ad wasn’t found.
  YMAAdErrorCodeNoSuchAdUnitID = 2,
/// The ad was loaded successfully, but there aren’t any available ads to display.
  YMAAdErrorCodeNoFill = 3,
/// Unexpected server response when loading the ad.
  YMAAdErrorCodeBadServerResponse = 4,
/// The ad size in the request does not match the ad size specified in the Partner interface for this ad block.
  YMAAdErrorCodeAdSizeMismatch = 5,
/// The ad type in the request does not match the ad type specified in the Partner interface for this ad block.
  YMAAdErrorCodeAdTypeMismatch = 6,
/// The service is temporarily unavailable. Try sending the request again later.
  YMAAdErrorCodeServiceTemporarilyNotAvailable = 7,
/// A full-screen ad can be shown only once.
  YMAAdErrorCodeAdHasAlreadyBeenPresented = 8,
/// ViewController passed for presenting full-screen ad is nil.
  YMAAdErrorCodeNilPresentingViewController = 9,
/// Incorrect fullscrseen view.
  YMAAdErrorCodeIncorrectFullscreenView = 10,
/// Invalid sdk configuration.
  YMAAdErrorCodeInvalidSDKConfiguration = 11,
};

@class NSString;
@class YMAAdSize;

/// A class with information data for ad.
SWIFT_CLASS("_TtC15YandexMobileAds9YMAAdInfo")
@interface YMAAdInfo : NSObject
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitId;
/// Size of downloaded ad.
@property (nonatomic, readonly, strong) YMAAdSize * _Nullable adSize;
- (nonnull instancetype)initWithAdUnitId:(NSString * _Nonnull)adUnitId adSize:(YMAAdSize * _Nullable)adSize;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class CLLocation;
enum YMAAdTheme : NSInteger;
@class YMAMutableAdRequest;

/// A class with data for a targeted ad request.
SWIFT_CLASS("_TtC15YandexMobileAds12YMAAdRequest")
@interface YMAAdRequest : NSObject <NSCopying, NSMutableCopying>
/// User age.
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, readonly, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic, readonly) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable biddingData;
/// Header bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable headerBiddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding mutable representation of current ad request.
@property (nonatomic, readonly, strong) YMAMutableAdRequest * _Nonnull mutableRequest;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableRequest` property instead.");
@end

@class YMAMutableAdRequestConfiguration;

/// This class is responsible for configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds25YMAAdRequestConfiguration")
@interface YMAAdRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitID;
/// User age.
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, readonly, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic, readonly) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding mutable representation of current ad request configuration.
@property (nonatomic, readonly, strong) YMAMutableAdRequestConfiguration * _Nonnull mutableConfiguration;
/// Initializes a new object of the <code>AdRequestConfiguration</code> class.
/// \param adUnitID The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format,
/// which is assigned in the Partner interface.
///
///
/// returns:
/// An object of the AdRequestConfiguration class, configuration for loading native ads.
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableConfiguration` property instead.");
@end


/// A class with error for requested ad.
SWIFT_CLASS("_TtC15YandexMobileAds17YMAAdRequestError")
@interface YMAAdRequestError : NSObject
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nullable adUnitId;
/// Error for  requested ad.
@property (nonatomic, readonly) NSError * _Nonnull error;
- (nonnull instancetype)initWithAdUnitId:(NSString * _Nullable)adUnitId error:(NSError * _Nonnull)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A class with size information for requested ad.
SWIFT_CLASS("_TtC15YandexMobileAds9YMAAdSize")
@interface YMAAdSize : NSObject
@property (nonatomic, readonly) CGFloat width;
@property (nonatomic, readonly) CGFloat height;
- (nonnull instancetype)initWithSize:(CGSize)size;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Ad theme.
typedef SWIFT_ENUM(NSInteger, YMAAdTheme, open) {
/// Unspecified ad theme (same as device theme).
  YMAAdThemeUnspecified = 0,
/// Light ad theme.
  YMAAdThemeLight = 1,
/// Dark ad theme.
  YMAAdThemeDark = 2,
};

/// A type of ad.
typedef SWIFT_ENUM(NSInteger, YMAAdType, open) {
/// The type of ad is banner.
  YMAAdTypeBanner = 0,
/// The type of ad is interstitial.
  YMAAdTypeInterstitial = 1,
/// The type of ad is rewarded.
  YMAAdTypeRewarded = 2,
/// The type of ad is native.
  YMAAdTypeNative = 3,
/// The type of ad is app open.
  YMAAdTypeAppOpenAd = 4,
};

@class YMAVideoController;
@protocol YMAAdViewDelegate;
@class YMABannerAdSize;
@class NSCoder;

/// This class is responsible for setting up and displaying the banner.
SWIFT_CLASS("_TtC15YandexMobileAds9YMAAdView")
@interface YMAAdView : UIView
/// It monitors the ad and receives notifications about user interaction with the ad.
/// remark:
/// It provides data necessary for displaying the ad
/// (for example, a <code>UIViewController</code> object that <code>YMAAdView</code> uses to show a modal controller
/// in response to the user interacting with the banner).
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitID;
/// VideoController provides playback control for ad video.
@property (nonatomic, readonly, strong) YMAVideoController * _Nonnull videoController;
/// It monitors the ad and receives notifications about user interaction with the ad.
/// remark:
/// It provides data necessary for displaying the ad
/// (for example, a <code>UIViewController</code> object that <code>YMAAdView</code> uses to show a modal controller
/// in response to the user interacting with the banner).
@property (nonatomic, weak) id <YMAAdViewDelegate> _Nullable delegate;
/// Initializes an object of the <code>YMAAdView</code> class to display the banner with the specified size.
/// \param adUnitID The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format,
/// which is assigned in the Partner interface.
///
/// \param adSize The size of the banner. The size of the banner is set in the <code>YMABannerAdSize</code> class.
///
///
/// returns:
/// Initializes an object of the <code>YMAAdView</code> class to display the banner with the specified size.
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID adSize:(YMABannerAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// Displays the banner centered at the top of the passed <code>View</code>.
/// \param view Object of the <code>UIView</code> class to add the banner to.
///
- (void)displayAtTopInView:(UIView * _Nonnull)view;
/// Displays the banner centered at the bottom of the passed <code>View</code>.
/// \param view An object of the <code>UIView</code> class to add the banner to.
///
- (void)displayAtBottomInView:(UIView * _Nonnull)view;
/// Loads a banner.
- (void)loadAd;
/// Loads a banner with data for targeting.
/// \param request Data for targeting.
///
- (void)loadAdWithRequest:(YMAAdRequest * _Nullable)request;
/// Returns the size of the banner content.
///
/// returns:
/// The size of the banner content.
- (CGSize)adContentSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@protocol UICoordinateSpace;
@class CALayer;
@class UIFocusEffect;
@class UIEvent;
@class UIWindow;
@class UILayoutGuide;
@class UIKeyboardLayoutGuide;
@class UIColor;
@class UIGestureRecognizer;
@class UIMotionEffect;
@class NSLayoutConstraint;
@class NSLayoutXAxisAnchor;
@class NSLayoutYAxisAnchor;
@class NSLayoutDimension;

@interface YMAAdView (SWIFT_EXTENSION(YandexMobileAds))
- (CGPoint)convertPoint:(CGPoint)point toCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect toCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)point fromCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect fromCoordinateSpace:(id <UICoordinateSpace> _Nonnull)coordinateSpace SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property (nonatomic) NSInteger tag;
@property (nonatomic, readonly, strong) CALayer * _Nonnull layer;
@property (nonatomic, readonly) BOOL canBecomeFocused;
@property (nonatomic, readonly, getter=isFocused) BOOL focused;
@property (nonatomic, copy) NSString * _Nullable focusGroupIdentifier SWIFT_AVAILABILITY(ios,introduced=14.0);
@property (nonatomic) UIFocusGroupPriority focusGroupPriority SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic, strong) UIFocusEffect * _Nullable focusEffect SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic) UISemanticContentAttribute semanticContentAttribute;
+ (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)attribute SWIFT_WARN_UNUSED_RESULT;
+ (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)semanticContentAttribute relativeToLayoutDirection:(UIUserInterfaceLayoutDirection)layoutDirection SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) UIUserInterfaceLayoutDirection effectiveUserInterfaceLayoutDirection;
@property (nonatomic) CGRect frame;
@property (nonatomic) CGRect bounds;
@property (nonatomic) CGPoint center;
@property (nonatomic) CGAffineTransform transform;
@property (nonatomic) CATransform3D transform3D;
@property (nonatomic) CGFloat contentScaleFactor;
@property (nonatomic) CGPoint anchorPoint SWIFT_AVAILABILITY(ios,introduced=16.0);
@property (nonatomic, getter=isMultipleTouchEnabled) BOOL multipleTouchEnabled;
@property (nonatomic, getter=isExclusiveTouch) BOOL exclusiveTouch;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)point toView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertPoint:(CGPoint)point fromView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect toView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (CGRect)convertRect:(CGRect)rect fromView:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL autoresizesSubviews;
@property (nonatomic) UIViewAutoresizing autoresizingMask;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)sizeToFit;
@property (nonatomic, readonly, strong) UIView * _Nullable superview;
@property (nonatomic, readonly, copy) NSArray<UIView *> * _Nonnull subviews;
@property (nonatomic, readonly, strong) UIWindow * _Nullable window;
- (void)removeFromSuperview;
- (void)insertSubview:(UIView * _Nonnull)view atIndex:(NSInteger)index;
- (void)exchangeSubviewAtIndex:(NSInteger)index1 withSubviewAtIndex:(NSInteger)index2;
- (void)addSubview:(UIView * _Nonnull)view;
- (void)insertSubview:(UIView * _Nonnull)view belowSubview:(UIView * _Nonnull)siblingSubview;
- (void)insertSubview:(UIView * _Nonnull)view aboveSubview:(UIView * _Nonnull)siblingSubview;
- (void)bringSubviewToFront:(UIView * _Nonnull)view;
- (void)sendSubviewToBack:(UIView * _Nonnull)view;
- (void)didAddSubview:(UIView * _Nonnull)subview;
- (void)willRemoveSubview:(UIView * _Nonnull)subview;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)didMoveToSuperview;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
- (BOOL)isDescendantOfView:(UIView * _Nonnull)view SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)viewWithTag:(NSInteger)tag SWIFT_WARN_UNUSED_RESULT;
- (void)setNeedsLayout;
- (void)layoutIfNeeded;
- (void)layoutSubviews;
@property (nonatomic) UIEdgeInsets layoutMargins;
@property (nonatomic) NSDirectionalEdgeInsets directionalLayoutMargins;
@property (nonatomic) BOOL preservesSuperviewLayoutMargins;
@property (nonatomic) BOOL insetsLayoutMarginsFromSafeArea;
- (void)layoutMarginsDidChange;
@property (nonatomic, readonly) UIEdgeInsets safeAreaInsets;
@property (nonatomic, readonly, strong) UILayoutGuide * _Nonnull layoutMarginsGuide;
@property (nonatomic, readonly, strong) UILayoutGuide * _Nonnull readableContentGuide;
@property (nonatomic, readonly, strong) UILayoutGuide * _Nonnull safeAreaLayoutGuide;
@property (nonatomic, readonly, strong) UIKeyboardLayoutGuide * _Nonnull keyboardLayoutGuide SWIFT_AVAILABILITY(ios,introduced=15.0);
- (void)drawRect:(CGRect)rect;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(CGRect)rect;
@property (nonatomic) BOOL clipsToBounds;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic) CGFloat alpha;
@property (nonatomic, getter=isOpaque) BOOL opaque;
@property (nonatomic) BOOL clearsContextBeforeDrawing;
@property (nonatomic, getter=isHidden) BOOL hidden;
@property (nonatomic) UIViewContentMode contentMode;
@property (nonatomic, strong) UIView * _Nullable maskView;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@property (nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode;
- (void)tintColorDidChange;
+ (void)setAnimationsEnabled:(BOOL)enabled;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL areAnimationsEnabled;)
+ (BOOL)areAnimationsEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)performWithoutAnimation:(SWIFT_NOESCAPE void (^ _Nonnull)(void))actionsWithoutAnimation;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval inheritedAnimationDuration;)
+ (NSTimeInterval)inheritedAnimationDuration SWIFT_WARN_UNUSED_RESULT;
+ (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay usingSpringWithDamping:(CGFloat)dampingRatio initialSpringVelocity:(CGFloat)velocity options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ _Nonnull)(void))animations;
+ (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)transitionWithView:(UIView * _Nonnull)view duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)transitionFromView:(UIView * _Nonnull)fromView toView:(UIView * _Nonnull)toView duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options completion:(void (^ _Nullable)(BOOL))completion;
+ (void)performSystemAnimation:(UISystemAnimation)animation onViews:(NSArray<UIView *> * _Nonnull)views options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))parallelAnimations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)modifyAnimationsWithRepeatCount:(CGFloat)count autoreverses:(BOOL)autoreverses animations:(SWIFT_NOESCAPE void (^ _Nonnull)(void))animations;
+ (void)animateKeyframesWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewKeyframeAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
+ (void)addKeyframeWithRelativeStartTime:(double)frameStartTime relativeDuration:(double)frameDuration animations:(void (^ _Nonnull)(void))animations;
@property (nonatomic, copy) NSArray<UIGestureRecognizer *> * _Nullable gestureRecognizers;
- (void)addGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
- (void)removeGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)addMotionEffect:(UIMotionEffect * _Nonnull)effect;
- (void)removeMotionEffect:(UIMotionEffect * _Nonnull)effect;
@property (nonatomic, copy) NSArray<UIMotionEffect *> * _Nonnull motionEffects;
@property (nonatomic, readonly, copy) NSArray<NSLayoutConstraint *> * _Nonnull constraints;
- (void)addConstraint:(NSLayoutConstraint * _Nonnull)constraint;
- (void)addConstraints:(NSArray<NSLayoutConstraint *> * _Nonnull)constraints;
- (void)removeConstraint:(NSLayoutConstraint * _Nonnull)constraint;
- (void)removeConstraints:(NSArray<NSLayoutConstraint *> * _Nonnull)constraints;
- (void)updateConstraintsIfNeeded;
- (void)updateConstraints;
- (BOOL)needsUpdateConstraints SWIFT_WARN_UNUSED_RESULT;
- (void)setNeedsUpdateConstraints;
@property (nonatomic) BOOL translatesAutoresizingMaskIntoConstraints;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL requiresConstraintBasedLayout;)
+ (BOOL)requiresConstraintBasedLayout SWIFT_WARN_UNUSED_RESULT;
- (CGRect)alignmentRectForFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (CGRect)frameForAlignmentRect:(CGRect)alignmentRect SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) UIEdgeInsets alignmentRectInsets;
@property (nonatomic, readonly, strong) UIView * _Nonnull viewForLastBaselineLayout;
@property (nonatomic, readonly, strong) UIView * _Nonnull viewForFirstBaselineLayout;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis SWIFT_WARN_UNUSED_RESULT;
- (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
- (UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis SWIFT_WARN_UNUSED_RESULT;
- (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize SWIFT_WARN_UNUSED_RESULT;
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<UILayoutGuide *> * _Nonnull layoutGuides;
- (void)addLayoutGuide:(UILayoutGuide * _Nonnull)layoutGuide;
- (void)removeLayoutGuide:(UILayoutGuide * _Nonnull)layoutGuide;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull leadingAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull trailingAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull leftAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull rightAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull topAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull bottomAnchor;
@property (nonatomic, readonly, strong) NSLayoutDimension * _Nonnull widthAnchor;
@property (nonatomic, readonly, strong) NSLayoutDimension * _Nonnull heightAnchor;
@property (nonatomic, readonly, strong) NSLayoutXAxisAnchor * _Nonnull centerXAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull centerYAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull firstBaselineAnchor;
@property (nonatomic, readonly, strong) NSLayoutYAxisAnchor * _Nonnull lastBaselineAnchor;
- (NSArray<NSLayoutConstraint *> * _Nonnull)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasAmbiguousLayout;
- (void)exerciseAmbiguityInLayout;
@property (nonatomic, copy) NSString * _Nullable restorationIdentifier;
- (void)encodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder;
- (void)decodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder;
- (UIView * _Nullable)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)resizableSnapshotViewFromRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates withCapInsets:(UIEdgeInsets)capInsets SWIFT_WARN_UNUSED_RESULT;
- (BOOL)drawViewHierarchyInRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIUserInterfaceStyle overrideUserInterfaceStyle;
@property (nonatomic) UIContentSizeCategory _Nullable minimumContentSizeCategory SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic) UIContentSizeCategory _Nullable maximumContentSizeCategory SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic, readonly, copy) NSString * _Nonnull appliedContentSizeCategoryLimitsDescription SWIFT_AVAILABILITY(ios,introduced=15.0);
@property (nonatomic, copy) NSString * _Nullable accessibilityIdentifier;
@end

@class UIViewController;
@protocol YMAImpressionData;

/// The protocol defines the methods of a delegate that monitors the ads.
/// remark:
/// Methods are called by an object of the <code>YMAAdView</code> class when its state changes.
SWIFT_PROTOCOL("_TtP15YandexMobileAds17YMAAdViewDelegate_")
@protocol YMAAdViewDelegate <NSObject>
@optional
/// Returns a <code>UIViewController</code> object that <code>YMAAdView</code> uses to show a modal controller
/// in response to the user’s interaction with the banner.
/// remark:
/// Since a single <code>UIViewController</code> can’t show multiple modal controllers simultaneously,
/// the returned <code>UIViewController</code> must be displayed in front of all the other ones.
///
/// returns:
/// The <code>UIViewController</code> object that <code>YMAAdView</code> uses for showing a modal controller
/// in response to the user’s interaction with the banner.
- (UIViewController * _Nullable)viewControllerForPresentingModalView SWIFT_WARN_UNUSED_RESULT;
/// Notifies that the banner is loaded.
/// remark:
/// At this time, you can add <code>YMAAdView</code> if you haven’t done so yet.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
- (void)adViewDidLoad:(YMAAdView * _Nonnull)adView;
/// Notifies that the banner failed to load.
/// \param adView A reference to the object of the <code>AdView</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)adViewDidFailLoading:(YMAAdView * _Nonnull)adView error:(NSError * _Nonnull)error;
/// Notifies that the user has clicked on the banner.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
- (void)adViewDidClick:(YMAAdView * _Nonnull)adView;
/// Notifies that the app will become inactive now because the user clicked on the banner ad
/// and is about to switch to a different application (Phone, App Store, and so on).
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
- (void)adViewWillLeaveApplication:(YMAAdView * _Nonnull)adView;
/// Notifies that the user has clicked on the banner and the in-app browser will open now.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)adView:(YMAAdView * _Nonnull)adView willPresentScreen:(UIViewController * _Nullable)viewController;
/// Notifies that the user has closed the embedded browser.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)adView:(YMAAdView * _Nonnull)adView didDismissScreen:(UIViewController * _Nullable)viewController;
/// Notifies delegate when an impression was tracked.
/// \param adView A reference to the object of the <code>YMAAdView</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)adView:(YMAAdView * _Nonnull)adView didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMAAppOpenAdDelegate;

/// This class is responsible for showing an app open ad.
SWIFT_CLASS("_TtC15YandexMobileAds12YMAAppOpenAd")
@interface YMAAppOpenAd : NSObject
/// Information data for ad
@property (nonatomic, readonly, strong) YMAAdInfo * _Nullable adInfo;
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAAppOpenAdDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Use this method to display an app open ad after preloading.
/// \param viewController An object of the <code>UIViewController</code> class, which is used to display an app open ad.
///
- (void)showFromViewController:(UIViewController * _Nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds20YMAAppOpenAdDelegate_")
@protocol YMAAppOpenAdDelegate <NSObject>
@optional
/// Notifies that the ad can’t be displayed.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)appOpenAd:(YMAAppOpenAd * _Nonnull)appOpenAd didFailToShowWithError:(NSError * _Nonnull)error;
/// Called after the interstitial ad shows.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
- (void)appOpenAdDidShow:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Called after dismissing the interstitial ad.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
- (void)appOpenAdDidDismiss:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Notifies that the user has clicked on the ad.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
- (void)appOpenAdDidClick:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Notifies delegate when an impression was tracked.
/// \param appOpenAd A reference to an object of the <code>YMAAppOpenAd</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)appOpenAd:(YMAAppOpenAd * _Nonnull)appOpenAd didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMAAppOpenAdLoaderDelegate;

/// This class is responsible for loading an app open ad.
SWIFT_CLASS("_TtC15YandexMobileAds18YMAAppOpenAdLoader")
@interface YMAAppOpenAdLoader : NSObject
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAAppOpenAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param request Request configuration for targeting.
///
- (void)loadAdWith:(YMAAdRequestConfiguration * _Nonnull)request;
/// . Cancel the ad loading, that was launched in loadAdWithRequestConfiguration:requestConfiguration
- (void)cancelLoading;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds26YMAAppOpenAdLoaderDelegate_")
@protocol YMAAppOpenAdLoaderDelegate <NSObject>
/// Notifies that the ad loaded successfully.
/// \param adLoader A reference to an object of the <code>YMAAppOpenAdLoader</code> class that invoked the method.
///
/// \param appOpenAd Interstitial ad that is loaded and ready to be displayed.
///
- (void)appOpenAdLoader:(YMAAppOpenAdLoader * _Nonnull)adLoader didLoad:(YMAAppOpenAd * _Nonnull)appOpenAd;
/// Notifies that the ad failed to load.
/// \param adLoader A reference to an object of the <code>YMAAppOpenAdLoader</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)appOpenAdLoader:(YMAAppOpenAdLoader * _Nonnull)adLoader didFailToLoadWithError:(YMAAdRequestError * _Nonnull)error;
@end

@protocol YMAAudioSessionManagerDelegate;

/// This class allows you to manipulate with an audio session.
SWIFT_CLASS("_TtC15YandexMobileAds22YMAAudioSessionManager")
@interface YMAAudioSessionManager : NSObject
/// An object implementing the YMAAudioSessionManagerDelegate protocol
/// that receives events triggered by the audio session events.
@property (nonatomic, weak) id <YMAAudioSessionManagerDelegate> _Nullable delegate;
/// Indicates whether the application will manage audio session.
@property (nonatomic) BOOL isAutomaticallyManaged;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The protocol defines the methods of a delegate that monitors the audio session.
SWIFT_PROTOCOL("_TtP15YandexMobileAds30YMAAudioSessionManagerDelegate_")
@protocol YMAAudioSessionManagerDelegate <NSObject>
/// Notifies that the audio will start playing.
/// \param audioSessionManager A reference to the object of the YMAAudioSessionManager class that invoked the method.
///
- (void)audioSessionManagerWillPlayAudio:(YMAAudioSessionManager * _Nonnull)audioSessionManager;
/// Notifies that the audio did stop playing.
/// \param audioSessionManager A reference to the object of the YMAAudioSessionManager class that invoked the method.
///
- (void)audioSessionManagerDidStopPlayingAudio:(YMAAudioSessionManager * _Nonnull)audioSessionManager;
@end


/// This class is responsible for the banner size.
SWIFT_CLASS("_TtC15YandexMobileAds15YMABannerAdSize")
@interface YMABannerAdSize : NSObject
/// The initial size of the banner.
/// remark:
/// The actual size of the banner is determined when
/// calling the <code>YMAAdViewDelegate.adViewDidLoad:</code> method of the <code>YMAAdViewDelegate</code> class.
@property (nonatomic, readonly) CGSize size;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Creates an object of the <code>YMABannerAdSize</code> class with the specified maximum height and width of the banner.
/// The method is available for internal SDK logic. We recommend using <code>inline(width:maxHeight:)</code> for the feed
/// and <code>sticky(containerWidth:)</code> if you want to anchor the banenr to the top or bottom of the screen.
/// \param width Width of the banner.
///
/// \param height Height of the banner.
///
///
/// returns:
/// An object of the <code>YMABannerAdSize</code> class with the fixed size.
+ (YMABannerAdSize * _Nonnull)fixedSizeWithWidth:(CGFloat)width height:(CGFloat)height SWIFT_WARN_UNUSED_RESULT;
/// Creates an object of the YMABannerAdSize class with the specified maximum height and width of the banner.
/// warning:
/// If the actual size of the banner is less than the size of the container,
/// an adaptive layer is drawn under the banner.
/// \param width Width of the banner.
///
/// \param height Maximum height available for an adaptive banner.
///
///
/// returns:
/// An object of the <code>YMABannerAdSize</code> class with the specified maximum size of the banner.
+ (YMABannerAdSize * _Nonnull)inlineSizeWithWidth:(CGFloat)width maxHeight:(CGFloat)height SWIFT_WARN_UNUSED_RESULT;
/// Creates an object of the <code>YMABannerAdSize</code> class with the specified width of the banner.
/// remark:
/// Returns sticky banner size with the given width.
/// \param width Width of the banner.
///
///
/// returns:
/// An object of the <code>YMABannerAdSize</code> class with the specified width of the sticky banner
+ (YMABannerAdSize * _Nonnull)stickySizeWithContainerWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
@end

@class YMABidderTokenRequestConfiguration;

/// Class contains logic that creates a bidder token to be used in the mediation.
/// Bidder token is generated asynchronously.
SWIFT_CLASS("_TtC15YandexMobileAds20YMABidderTokenLoader")
@interface YMABidderTokenLoader : NSObject
- (nonnull instancetype)init;
/// Creates bidder token and dispatches results into completionHandler.
/// \param requestConfiguration request configuration for generating bidder token.
///
/// \param completionHandler bidder token loading handler.
///
- (void)loadBidderTokenWithRequestConfiguration:(YMABidderTokenRequestConfiguration * _Nonnull)requestConfiguration completionHandler:(void (^ _Nonnull)(NSString * _Nullable))completionHandler;
- (void)loadBidderTokenWithCompletionHandler:(void (^ _Nonnull)(NSString * _Nullable))completionHandler SWIFT_DEPRECATED_MSG("Use loadBidderToken(requestConfiguration:completionHandler:) instead.");
@end


/// A class with data for generating bidder token.
SWIFT_CLASS("_TtC15YandexMobileAds34YMABidderTokenRequestConfiguration")
@interface YMABidderTokenRequestConfiguration : NSObject
/// A type of ad.
@property (nonatomic, readonly) enum YMAAdType adType;
/// A size of the banner if the type of ad is a banner.
@property (nonatomic, strong) YMABannerAdSize * _Nullable bannerAdSize;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Initializes a new object of the <code>BidderTokenRequestConfiguration</code> class.
/// \param adType A type of ad.
///
///
/// returns:
/// An object of the BidderTokenRequestConfiguration class, configuration for generating bidder token.
- (nonnull instancetype)initWithAdType:(enum YMAAdType)adType;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class YMALabelAppearance;
@class YMAMutableButtonAppearance;

/// A class with fixed settings for the standard button appearance.
/// remark:
/// If you want to edit the standard appearance settings,
/// use the <code>YMAMutableNativeTemplateAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds19YMAButtonAppearance")
@interface YMAButtonAppearance : NSObject <NSCopying, NSMutableCopying>
/// Settings for the button label.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nonnull textAppearance;
/// Label color when the button is clicked.
@property (nonatomic, readonly, strong) UIColor * _Nonnull highlightedTextColor;
/// The color of the button background in its normal state.
@property (nonatomic, readonly, strong) UIColor * _Nonnull normalColor;
/// The color of the button background when clicked.
@property (nonatomic, readonly, strong) UIColor * _Nonnull highlightedColor;
/// The color of the button border.
@property (nonatomic, readonly, strong) UIColor * _Nonnull borderColor;
/// The thickness of the button border.
@property (nonatomic, readonly) CGFloat borderWidth;
/// Corresponding mutable representation of current button appearance.
@property (nonatomic, readonly, strong) YMAMutableButtonAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
/// Creates an object of the <code>YMAButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param highlightedTextColor Label color when the button is clicked.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
/// Creates an object of the <code>YMAButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
+ (nonnull instancetype)appearanceWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth SWIFT_WARN_UNUSED_RESULT;
+ (nonnull instancetype)appearanceWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


/// Device types.
SWIFT_CLASS("_TtC15YandexMobileAds13YMADeviceType")
@interface YMADeviceType : NSObject
@property (nonatomic, readonly) NSUInteger rawValue;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithRawValue:(NSUInteger)rawValue;
/// The device is not defined.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMADeviceType * _Nonnull none;)
+ (YMADeviceType * _Nonnull)none SWIFT_WARN_UNUSED_RESULT;
/// Real device.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMADeviceType * _Nonnull hardware;)
+ (YMADeviceType * _Nonnull)hardware SWIFT_WARN_UNUSED_RESULT;
/// A device simulator.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMADeviceType * _Nonnull simulator;)
+ (YMADeviceType * _Nonnull)simulator SWIFT_WARN_UNUSED_RESULT;
@end

@class YMASizeConstraint;
@class YMAMutableImageAppearance;

/// Class with standard image appearance settings (non-editable).
/// remark:
/// If you want to edit the settings of the standard appearance,
/// use the <code>YMAMutableImageAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds18YMAImageAppearance")
@interface YMAImageAppearance : NSObject <NSCopying, NSMutableCopying>
/// Limits the width of the image.
@property (nonatomic, readonly, strong) YMASizeConstraint * _Nonnull widthConstraint;
/// Corresponding mutable representation of current image appearance.
@property (nonatomic, readonly, strong) YMAMutableImageAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>ImageAppearance</code> class,
/// i.e., an image with the specified sizing constraint.
/// \param widthConstraint Limits the width of the image.
///
///
/// returns:
/// Configured image appearance.
- (nonnull instancetype)initWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint;
+ (nonnull instancetype)appearanceWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


/// A protocol with impression-level revenue data.
SWIFT_PROTOCOL("_TtP15YandexMobileAds17YMAImpressionData_")
@protocol YMAImpressionData <NSCoding, NSObject>
/// A raw impression-level revenue data, string with json.
@property (nonatomic, readonly, copy) NSString * _Nonnull rawData;
@end

@protocol YMAInterstitialAdDelegate;

/// This class is responsible for showing an interstitial ad.
SWIFT_CLASS("_TtC15YandexMobileAds17YMAInterstitialAd")
@interface YMAInterstitialAd : NSObject
/// Information data for ad
@property (nonatomic, readonly, strong) YMAAdInfo * _Nullable adInfo;
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAInterstitialAdDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Use this method to display an interstitial ad after preloading.
/// \param viewController An object of the <code>UIViewController</code> class, which is used to display an interstitial ad.
///
- (void)showFromViewController:(UIViewController * _Nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds25YMAInterstitialAdDelegate_")
@protocol YMAInterstitialAdDelegate <NSObject>
@optional
/// Notifies that the ad can’t be displayed.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)interstitialAd:(YMAInterstitialAd * _Nonnull)interstitialAd didFailToShowWithError:(NSError * _Nonnull)error;
/// Called after the interstitial ad shows.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
- (void)interstitialAdDidShow:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Called after dismissing the interstitial ad.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
- (void)interstitialAdDidDismiss:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Notifies that the user has clicked on the ad.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
- (void)interstitialAdDidClick:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Notifies delegate when an impression was tracked.
/// \param interstitialAd A reference to an object of the <code>YMAInterstitialAd</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)interstitialAd:(YMAInterstitialAd * _Nonnull)interstitialAd didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMAInterstitialAdLoaderDelegate;

/// This class is responsible for loading an interstitial ad.
SWIFT_CLASS("_TtC15YandexMobileAds23YMAInterstitialAdLoader")
@interface YMAInterstitialAdLoader : NSObject
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMAInterstitialAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param request Request configuration for targeting.
///
- (void)loadAdWithRequestConfiguration:(YMAAdRequestConfiguration * _Nonnull)request;
/// . Cancel the ad loading, that was launched in loadAdWithRequestConfiguration:requestConfiguration
- (void)cancelLoading;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds31YMAInterstitialAdLoaderDelegate_")
@protocol YMAInterstitialAdLoaderDelegate <NSObject>
/// Notifies that the ad loaded successfully.
/// \param adLoader A reference to an object of the <code>YMAInterstitialAdLoader</code> class that invoked the method.
///
/// \param interstitialAd Interstitial ad that is loaded and ready to be displayed.
///
- (void)interstitialAdLoader:(YMAInterstitialAdLoader * _Nonnull)adLoader didLoad:(YMAInterstitialAd * _Nonnull)interstitialAd;
/// Notifies that the ad failed to load.
/// \param adLoader A reference to an object of the <code>InterstitialAdLoader</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)interstitialAdLoader:(YMAInterstitialAdLoader * _Nonnull)adLoader didFailToLoadWithError:(YMAAdRequestError * _Nonnull)error;
@end

@class UIFont;
@class YMAMutableLabelAppearance;

/// A class with fixed settings for the standard text appearance: font name, size, and color.
/// remark:
/// If you want to edit the settings of the standard appearance,
/// use the <code>YMAMutableLabelAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds18YMALabelAppearance")
@interface YMALabelAppearance : NSObject <NSCopying, NSMutableCopying>
/// Font settings: name and size.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// Text color.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// Corresponding mutable representation of current label appearance.
@property (nonatomic, readonly, strong) YMAMutableLabelAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>LabelAppearance</code> class with the text settings.
/// \param font Font settings: name and size.
///
/// \param textColor Text color.
///
///
/// returns:
/// The configured text appearance (the specified font and color).
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor;
/// Creates an object of the <code>LabelAppearance</code> class with the text settings.
/// \param font Font settings: name and size.
///
/// \param textColor Text color.
///
///
/// returns:
/// The configured text appearance (the specified font and color).
+ (nonnull instancetype)appearanceWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


SWIFT_CLASS("_TtC15YandexMobileAds12YMAMobileAds")
@interface YMAMobileAds : NSObject
/// Enables logging. By default, logging is disabled.
+ (void)enableLogging;
/// Returns the SDK version in the X.YY format.
///
/// returns:
/// The version of the SDK in X.YY format.
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
+ (YMAAudioSessionManager * _Nonnull)audioSessionManager SWIFT_WARN_UNUSED_RESULT;
/// The SDK automatically collects location data if the user allowed the app to track the location.
/// This option is enabled by default.
/// \param enabled Enables or disables collecting location data.
///
+ (void)setLocationTrackingEnabled:(BOOL)enabled;
/// Enables/disables the incorrect integration indicator for native advertising.
/// remark:
/// By default, the indicator of incorrect integration (for native ads) is enabled
/// for the <code>DeviceType.simulator</code> device type (the types are listed in YMADeviceTypes).
/// To disable the indicator, pass the <code>YMADeviceType.none</code> value.
/// @warning The indicator is not displayed in apps installed from the AppStore,
/// regardless of the <code>deviceType</code> parameter value.
/// \param deviceType The type of a device for displaying the incorrect integration indicator.
///
+ (void)enableVisibilityErrorIndicatorForDeviceType:(YMADeviceType * _Nonnull)deviceType;
/// Set a value indicating whether user from GDPR region allowed to collect personal data
/// which is used for analytics and ad targeting.
/// If the value is set to <code>NO</code> personal data will not be collected. The default value is <code>NO</code>.
/// \param consent <code>YES</code> if user provided consent to collect personal data, otherwise <code>NO</code>.
///
+ (void)setUserConsent:(BOOL)consent;
/// Initializes the Yandex Mobile Ads SDK internal state.
/// \param completionHandler The block that will be executed after sdk initialization.
///
+ (void)initializeSDKWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end













/// An editable version of the <code>AdRequest</code> class with data for a targeted ad request.
SWIFT_CLASS("_TtC15YandexMobileAds19YMAMutableAdRequest")
@interface YMAMutableAdRequest : YMAAdRequest
/// User age.
@property (nonatomic, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, copy) NSString * _Nullable biddingData;
/// Header bidding data for ad loading from mediation, that contains bid id.
@property (nonatomic, copy) NSString * _Nullable headerBiddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding immutable representation of current ad request.
@property (nonatomic, readonly, strong) YMAAdRequest * _Nonnull request;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `request` property instead.");
@end


/// An editable version of the <code>YMAAdRequestConfiguration</code> class configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds32YMAMutableAdRequestConfiguration")
@interface YMAMutableAdRequestConfiguration : YMAAdRequestConfiguration
/// User age.
@property (nonatomic, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Corresponding immutable representation of current ad request configuration.
@property (nonatomic, readonly, strong) YMAAdRequestConfiguration * _Nonnull request;
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `request` property instead.");
@end


/// Class with editable settings for the standard button appearance.
SWIFT_CLASS("_TtC15YandexMobileAds26YMAMutableButtonAppearance")
@interface YMAMutableButtonAppearance : YMAButtonAppearance
/// Settings for the button label.
@property (nonatomic, strong) YMALabelAppearance * _Nonnull textAppearance;
/// Label color when the button is clicked.
@property (nonatomic, strong) UIColor * _Nonnull highlightedTextColor;
/// The color of the button background in its normal state.
@property (nonatomic, strong) UIColor * _Nonnull normalColor;
/// The color of the button background when clicked.
@property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
/// The color of the button border.
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// The thickness of the button border.
@property (nonatomic) CGFloat borderWidth;
/// Corresponding immutable representation of current label appearance.
@property (nonatomic, readonly, strong) YMAButtonAppearance * _Nonnull buttonAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
/// Creates an object of the <code>YMAMutableButtonAppearance</code> class,
/// i.e., a button with the specified appearance (label font, label color, border color, and other settings).
/// \param textAppearance Settings for the button label.
///
/// \param highlightedTextColor Label color when the button is clicked.
///
/// \param normalColor The color of the button background in its normal state.
///
/// \param highlightedColor The color of the button background when clicked.
///
/// \param borderColor The color of the button border.
///
/// \param borderWidth The thickness of the button border.
///
///
/// returns:
/// Configured button appearance.
- (nonnull instancetype)initWithTextAppearance:(YMALabelAppearance * _Nonnull)textAppearance highlightedTextColor:(UIColor * _Nonnull)highlightedTextColor normalColor:(UIColor * _Nonnull)normalColor highlightedColor:(UIColor * _Nonnull)highlightedColor borderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `buttonAppearance` property instead.");
@end


/// Class with editable settings for the standard image appearance.
SWIFT_CLASS("_TtC15YandexMobileAds25YMAMutableImageAppearance")
@interface YMAMutableImageAppearance : YMAImageAppearance
/// Limits the width of the image.
@property (nonatomic, strong) YMASizeConstraint * _Nonnull widthConstraint;
/// Corresponding immutable representation of current image appearance.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nonnull imageAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableImageAppearance</code> class,
/// i.e., an image with the specified sizing constraint.
/// \param widthConstraint Limits the width of the image.
///
///
/// returns:
/// Configured image appearance.
- (nonnull instancetype)initWithWidthConstraint:(YMASizeConstraint * _Nonnull)widthConstraint;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `imageAppearance` property instead.");
@end


/// Class with editable text settings.
SWIFT_CLASS("_TtC15YandexMobileAds25YMAMutableLabelAppearance")
@interface YMAMutableLabelAppearance : YMALabelAppearance
/// Font settings: name and size.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// Text color.
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// Corresponding immutable representation of current label appearance.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nonnull labelAppearance;
/// Creates an object of the <code>YMAMutableLabelAppearance</code> class with the text settings.
/// \param font Font settings: name and size.
///
/// \param textColor Text color.
///
///
/// returns:
/// The configured text appearance (the specified font and color).
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `labelAppearance` property instead.");
@end

@class YMAMutableNativeAdRequestConfiguration;

/// This class is responsible for configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds31YMANativeAdRequestConfiguration")
@interface YMANativeAdRequestConfiguration : NSObject <NSCopying, NSMutableCopying>
/// The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format, which is assigned in the Partner interface.
@property (nonatomic, readonly, copy) NSString * _Nonnull adUnitID;
/// User age.
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, readonly, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, readonly, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic, readonly) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, readonly, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
/// Flag for automatic image loading. Acceptable values: <code>true</code> – Load automatically; <code>false</code> – Load manually.
/// warning:
/// If the app simultaneously stores links to a large number of ads,
/// we recommend using manual image loading.
@property (nonatomic, readonly) BOOL shouldLoadImagesAutomatically;
/// Corresponding mutable representation of current native ad request configuration.
@property (nonatomic, readonly, strong) YMAMutableNativeAdRequestConfiguration * _Nonnull mutableConfiguration;
/// Initializes a new object of the <code>YMANativeAdRequestConfiguration</code> class.
/// \param adUnitID The AdUnit ID is a unique identifier in the R-M-XXXXXX-Y format,
/// which is assigned in the Partner interface.
///
///
/// returns:
/// An object of the <code>YMANativeAdRequestConfiguration</code> class, configuration for loading native ads.
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableConfiguration` property instead.");
@end


/// An editable version of the <code>YMANativeAdRequestConfiguration</code> class configuring native ad loading.
SWIFT_CLASS("_TtC15YandexMobileAds38YMAMutableNativeAdRequestConfiguration")
@interface YMAMutableNativeAdRequestConfiguration : YMANativeAdRequestConfiguration
/// User age.
@property (nonatomic, strong) NSNumber * _Nullable age;
/// The search query that the user entered in the app.
@property (nonatomic, copy) NSString * _Nullable contextQuery;
/// List of tags. Matches the context in which the ad will be displayed.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable contextTags;
/// The gender of the user. For a list of values, see the Gender section.
@property (nonatomic, copy) NSString * _Nullable gender;
/// User location.
@property (nonatomic, strong) CLLocation * _Nullable location;
/// Preferred ad theme.
@property (nonatomic) enum YMAAdTheme adTheme;
/// Bidding data for ad loading from mediation.
@property (nonatomic, copy) NSString * _Nullable biddingData;
/// A set of arbitrary input parameters.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable parameters;
@property (nonatomic) BOOL shouldLoadImagesAutomatically;
/// Corresponding immutable representation of current native ad request configuration.
@property (nonatomic, readonly, strong) YMANativeAdRequestConfiguration * _Nonnull request;
- (nonnull instancetype)initWithAdUnitID:(NSString * _Nonnull)adUnitID;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `request` property instead.");
@end

@class YMARatingAppearance;
@class YMAMutableNativeTemplateAppearance;

/// Class with the default (fixed) settings for the standard ad layout.
/// If you want to edit the default settings of the standard appearance,
/// use the <code>YMAMutableNativeTemplateAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds27YMANativeTemplateAppearance")
@interface YMANativeTemplateAppearance : NSObject <NSCopying, NSMutableCopying>
/// Width of the border.
@property (nonatomic, readonly) CGFloat borderWidth;
/// Color of the border.
@property (nonatomic, readonly, strong) UIColor * _Nonnull borderColor;
/// Background color.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// Horizontal (left and right) margins between the content and the edges of the ad.
/// remark:
/// Measured in logical pixels.
@property (nonatomic, readonly) YMAHorizontalOffset contentPadding;
/// The horizontal margins around the image, relative to the ad content.
/// remark:
/// The left margin is relative to the left edge of the content.
/// The right margin is the gap between the right edge of the image and the left edge of the text.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic, readonly) YMAHorizontalOffset imageMargins;
/// Appearance settings for the text with age restrictions.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable ageAppearance;
/// Appearance settings for the main ad text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable bodyAppearance;
/// Appearance settings for a call-to-action button (for example, the Install button).
@property (nonatomic, readonly, strong) YMAButtonAppearance * _Nullable callToActionAppearance;
/// Appearance settings for the domain text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable domainAppearance;
/// Appearance settings for the favicon.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nullable faviconAppearance;
/// Appearance settings for the feedback.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nullable feedbackAppearance;
/// Appearance settings for the image.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic, readonly, strong) YMAImageAppearance * _Nullable imageAppearance;
/// Appearance settings for the rating.
@property (nonatomic, readonly, strong) YMARatingAppearance * _Nullable ratingAppearance;
/// Appearance settings for the ad network text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable sponsoredAppearance;
/// Appearance settings for the ad title text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable titleAppearance;
/// Appearance settings for the number of app reviews.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable reviewCountAppearance;
/// Appearance settings for the warning text.
@property (nonatomic, readonly, strong) YMALabelAppearance * _Nullable warningAppearance;
/// Corresponding mutable representation of current native template appearance.
@property (nonatomic, readonly, strong) YMAMutableNativeTemplateAppearance * _Nonnull mutableAppearance;
/// Creates an object with default settings for the standard design.
///
/// returns:
/// Returns an object with the default settings for the standard design.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMANativeTemplateAppearance * _Nonnull defaultAppearance;)
+ (YMANativeTemplateAppearance * _Nonnull)defaultAppearance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


SWIFT_CLASS("_TtC15YandexMobileAds34YMAMutableNativeTemplateAppearance")
@interface YMAMutableNativeTemplateAppearance : YMANativeTemplateAppearance
/// Width of the border.
@property (nonatomic) CGFloat borderWidth;
/// Color of the border.
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// Background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// Horizontal (left and right) margins between the content and the edges of the ad.
/// remark:
/// Measured in logical pixels.
@property (nonatomic) YMAHorizontalOffset contentPadding;
/// The horizontal margins around the image, relative to the ad content.
/// remark:
/// The left margin is relative to the left edge of the content.
/// The right margin is the gap between the right edge of the image and the left edge of the text.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic) YMAHorizontalOffset imageMargins;
/// Appearance settings for the text with age restrictions.
@property (nonatomic, strong) YMALabelAppearance * _Nullable ageAppearance;
/// Appearance settings for the main ad text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable bodyAppearance;
/// Appearance settings for a call-to-action button (for example, the Install button).
@property (nonatomic, strong) YMAButtonAppearance * _Nullable callToActionAppearance;
/// Appearance settings for the domain text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable domainAppearance;
/// Appearance settings for the favicon.
@property (nonatomic, strong) YMAImageAppearance * _Nullable faviconAppearance;
/// Appearance settings for the feedback.
@property (nonatomic, strong) YMAImageAppearance * _Nullable feedbackAppearance;
/// Appearance settings for the image.
/// warning:
/// It doesn’t apply to large images that are placed under the main ad text
/// and cover the entire width of the ad.
@property (nonatomic, strong) YMAImageAppearance * _Nullable imageAppearance;
/// Appearance settings for the rating.
@property (nonatomic, strong) YMARatingAppearance * _Nullable ratingAppearance;
/// Appearance settings for the ad network text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable sponsoredAppearance;
/// Appearance settings for the ad title text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable titleAppearance;
/// Appearance settings for the number of app reviews.
@property (nonatomic, strong) YMALabelAppearance * _Nullable reviewCountAppearance;
/// Appearance settings for the warning text.
@property (nonatomic, strong) YMALabelAppearance * _Nullable warningAppearance;
/// Corresponding immutable representation of current native template appearance.
@property (nonatomic, readonly, strong) YMANativeTemplateAppearance * _Nonnull appearance;
- (nonnull instancetype)init;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `appearance` property instead.");
@end

@class YMAMutableRatingAppearance;

/// A class with fixed settings for the standard rating appearance.
/// remark:
/// If you want to edit the settings of the standard appearance,
/// use the <code>YMAMutableRatingAppearance</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds19YMARatingAppearance")
@interface YMARatingAppearance : NSObject <NSCopying, NSMutableCopying>
/// The outline color of an empty (unfilled) star.
@property (nonatomic, readonly, strong) UIColor * _Nonnull emptyStarColor;
/// The color of a filled star.
@property (nonatomic, readonly, strong) UIColor * _Nonnull filledStarColor;
/// The preferred size of a star.
/// warning:
/// If the use of the preferred size makes the rating too large for the space reserved for it,
/// the maximum allowed size is used instead.
@property (nonatomic, readonly) CGFloat preferredStarSize;
/// Corresponding mutable representation of current rating appearance.
@property (nonatomic, readonly, strong) YMAMutableRatingAppearance * _Nonnull mutableAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>RatingAppearance</code> class,
/// i.e., a rating with the specified appearance (outline color, size, and other settings).
/// \param emptyStarColor The outline color of an empty (unfilled) star.
///
/// \param filledStarColor The color of a filled star.
///
/// \param starSize The preferred size of a star.
///
///
/// returns:
/// Configured rating appearance.
- (nonnull instancetype)initWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize;
/// Creates an object of the <code>RatingAppearance</code> class,
/// i.e., a rating with the specified appearance (outline color, size, and other settings).
/// \param emptyStarColor The outline color of an empty (unfilled) star.
///
/// \param filledStarColor The color of a filled star.
///
/// \param starSize The preferred size of a star.
///
///
/// returns:
/// Configured rating appearance.
+ (nonnull instancetype)appearanceWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableAppearance` property instead.");
@end


/// A class with editable settings for the standard rating appearance.
SWIFT_CLASS("_TtC15YandexMobileAds26YMAMutableRatingAppearance")
@interface YMAMutableRatingAppearance : YMARatingAppearance
/// Text color.
@property (nonatomic, strong) UIColor * _Nonnull emptyStarColor;
@property (nonatomic, strong) UIColor * _Nonnull filledStarColor;
@property (nonatomic) CGFloat preferredStarSize;
/// Corresponding immutable representation of current rating appearance.
@property (nonatomic, readonly, strong) YMARatingAppearance * _Nonnull ratingAppearance;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableRatingAppearance</code> class,
/// i.e., a rating with the specified appearance (outline color, size, and other settings).
/// \param emptyStarColor The outline color of an empty (unfilled) star.
///
/// \param filledStarColor The color of a filled star.
///
/// \param starSize The preferred size of a star.
///
///
/// returns:
/// Configured rating appearance.
- (nonnull instancetype)initWithEmptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarColor:(UIColor * _Nonnull)filledStarColor starSize:(CGFloat)starSize;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `ratingAppearance` property instead.");
@end

enum YMASizeConstraintType : NSInteger;
@class YMAMutableSizeConstraint;

/// A class with object sizing constraints.
/// remark:
/// If you want to edit the object sizing constraints, use the <code>YMAMutableSizeConstraint</code> class.
SWIFT_CLASS("_TtC15YandexMobileAds17YMASizeConstraint")
@interface YMASizeConstraint : NSObject <NSCopying, NSMutableCopying>
/// Object sizing constraint.
/// remark:
/// Acceptable values are listed in <code>YMASizeConstraintType</code> enum.
@property (nonatomic, readonly) enum YMASizeConstraintType type;
/// The constraint value. The meaning of the value depends on the <code>type</code> property.
@property (nonatomic, readonly) CGFloat value;
/// Corresponding mutable representation of current size constraint.
@property (nonatomic, readonly, strong) YMAMutableSizeConstraint * _Nonnull mutableConstraint;
- (nonnull instancetype)init;
/// Creates an object of the <code>SizeConstraint</code> class, i.e., the object sizing constraint.
/// \param type Object sizing constraint. Acceptable values are listed in <code>SizeConstraintType</code>.
///
/// \param value The constraint value. The meaning of the value depends on the <code>type</code> property.
///
///
/// returns:
/// The specified object sizing constraint.
- (nonnull instancetype)initWithType:(enum YMASizeConstraintType)type value:(CGFloat)value;
/// Creates an object of the <code>SizeConstraint</code> class, i.e., the object sizing constraint.
/// \param type Object sizing constraint. Acceptable values are listed in <code>SizeConstraintType</code>.
///
/// \param value The constraint value. The meaning of the value depends on the <code>type</code> property.
///
///
/// returns:
/// The specified object sizing constraint.
+ (nonnull instancetype)constraintWithType:(enum YMASizeConstraintType)type value:(CGFloat)value SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Will be removed in future versions.");
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("mutableCopy(with:) is deprecated. Use `mutableConstraint` property instead.");
@end


/// A class with editable object sizing constraints.
SWIFT_CLASS("_TtC15YandexMobileAds24YMAMutableSizeConstraint")
@interface YMAMutableSizeConstraint : YMASizeConstraint
/// Object sizing constraint.
/// remark:
/// Acceptable values are listed in <code>YMASizeConstraintType</code>.
@property (nonatomic) enum YMASizeConstraintType type;
/// The constraint value. The meaning of the value depends on the <code>type</code> property.
@property (nonatomic) CGFloat value;
/// Corresponding immutable representation of current size constraint.
@property (nonatomic, readonly, strong) YMASizeConstraint * _Nonnull constraint;
- (nonnull instancetype)init;
/// Creates an object of the <code>YMAMutableSizeConstraint</code> class, i.e., the object sizing constraint.
/// \param type Object sizing constraint. Acceptable values are listed in <code>YMASizeConstraintType</code>.
///
/// \param value The constraint value. The meaning of the value depends on the <code>type</code> property.
///
///
/// returns:
/// The specified object sizing constraint.
- (nonnull instancetype)initWithType:(enum YMASizeConstraintType)type value:(CGFloat)value;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("copy(with:) is deprecated. Use `constraint` property instead.");
@end

enum YMANativeAdType : NSInteger;
@protocol YMANativeAdDelegate;
@class YMANativeAdAssets;
@protocol YMANativeAdImageLoadingObserver;
@class YMANativeAdView;

/// The protocol provides methods for managing an ad and getting the values of the ad assets.
SWIFT_PROTOCOL("_TtP15YandexMobileAds11YMANativeAd_")
@protocol YMANativeAd <NSObject>
/// Type of native ad. For acceptable values, see <code>YMANativeAdType</code>.
@property (nonatomic, readonly) enum YMANativeAdType adType;
/// An object implementing the <code>YMANativeAdDelegate</code> protocol
/// that receives events triggered by the user’s interaction with the ad.
@property (nonatomic, strong) id <YMANativeAdDelegate> _Nullable delegate;
/// Any string in the ad (set in the Partner interface).
/// warning:
/// This property is only used for working with ADFOX.
@property (nonatomic, readonly, copy) NSString * _Nullable info;
/// An array with nested ads.
@property (nonatomic, readonly, copy) NSArray<id <YMANativeAd>> * _Nonnull ads;
/// An object with ad assets.
///
/// returns:
/// Returns an object containing the ad assets.
- (YMANativeAdAssets * _Nonnull)adAssets SWIFT_WARN_UNUSED_RESULT;
/// Loads images if manual loading is selected.
/// warning:
/// All images are cached, but they can be deleted at any time,
/// so you need to call this method before every ad impression.
- (void)loadImages;
/// Adds an observer that receives notifications about the image loading process.
/// \param observer The observer of the image loading process.
///
- (void)addImageLoadingObserver:(id <YMANativeAdImageLoadingObserver> _Nonnull)observer;
/// Removes the observer that receives notifications about the image loading process.
/// \param observer The observer of the image loading process.
///
- (void)removeImageLoadingObserver:(id <YMANativeAdImageLoadingObserver> _Nonnull)observer;
/// Sets values of all ad assets to native ad view, installs impression and click handlers.
/// \param adView <code>YMANativeAdView</code> with views for ad assets.
///
/// \param error Binding error. - seealso:  <code>YMANativeAdErrorCode</code> for error codes.
///
///
/// returns:
/// <code>true</code> if binding succeeded, otherwise <code>false</code>.
- (BOOL)bindWithAdView:(YMANativeAdView * _Nonnull)adView error:(NSError * _Nullable * _Nullable)error;
/// Configures views for native ads displlay in slider.
/// \param sliderView Root slider ad view with general assets
///
/// \param error Binding error. - seealso: <code>YMANativeAdErrorCode</code> for error codes.
///
///
/// returns:
/// <code>true</code> if binding succeeded, otherwise <code>false</code>.
- (BOOL)bindAdToSliderView:(YMANativeAdView * _Nonnull)sliderView error:(NSError * _Nullable * _Nullable)error;
@end

@class YMANativeAdImage;
@class YMANativeAdMedia;

/// Class with native ad assets.
SWIFT_CLASS("_TtC15YandexMobileAds17YMANativeAdAssets")
@interface YMANativeAdAssets : NSObject
/// Age restrictions.
@property (nonatomic, copy) NSString * _Nullable age;
/// The main ad text.
@property (nonatomic, copy) NSString * _Nullable body;
/// The call to action.
@property (nonatomic, copy) NSString * _Nullable callToAction;
/// The domain.
@property (nonatomic, copy) NSString * _Nullable domain;
/// The web page’s favicon.
@property (nonatomic, strong) YMANativeAdImage * _Nullable favicon;
/// Reports about the necessity to show <code>feedbackButton</code>
@property (nonatomic) BOOL feedbackAvailable;
/// The app’s icon.
@property (nonatomic, strong) YMANativeAdImage * _Nullable icon;
/// The main image.
@property (nonatomic, strong) YMANativeAdImage * _Nullable image;
/// Ad media.
@property (nonatomic, strong) YMANativeAdMedia * _Nullable media;
/// The price of the advertised app.
@property (nonatomic, copy) NSString * _Nullable price;
/// The app’s rating.
@property (nonatomic, strong) NSNumber * _Nullable rating;
/// The number of app reviews.
@property (nonatomic, copy) NSString * _Nullable reviewCount;
/// Data on the ad network.
@property (nonatomic, copy) NSString * _Nullable sponsored;
/// The ad title.
@property (nonatomic, copy) NSString * _Nullable title;
/// The warning.
@property (nonatomic, copy) NSString * _Nullable warning;
- (nonnull instancetype)init;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds19YMANativeAdDelegate_")
@protocol YMANativeAdDelegate <NSObject>
@optional
/// <code>UIViewController</code> object that is used for showing a modal controller
/// in response to the user’s interaction with the banner.
///
/// returns:
/// <code>UIViewController</code> object that is used for showing a modal controller
/// in response to the user’s interaction with the banner.
- (UIViewController * _Nullable)viewControllerForPresentingModalView SWIFT_WARN_UNUSED_RESULT;
/// Notifies that the user has clicked on the ad.
/// \param ad A reference to the object that invoked the method.
///
- (void)nativeAdDidClick:(id <YMANativeAd> _Nonnull)ad;
/// Notifies that the user switched from the ad to an app (for example, the browser).
/// \param ad A reference to the object that invoked the method.
///
- (void)nativeAdWillLeaveApplication:(id <YMANativeAd> _Nonnull)ad;
/// Notifies that the ad will show the modal <code>UIViewController</code>
/// in response to the user interacting with the banner.
/// \param ad A reference to the object that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)nativeAd:(id <YMANativeAd> _Nonnull)ad willPresentScreen:(UIViewController * _Nullable)viewController;
/// Notifies that the ad finished showing the modal <code>UIViewController</code>
/// in response to the user interacting with the banner.
/// \param ad A reference to the object that invoked the method.
///
/// \param viewController Modal <code>UIViewController</code>.
///
- (void)nativeAd:(id <YMANativeAd> _Nonnull)ad didDismissScreen:(UIViewController * _Nullable)viewController;
/// Notifies delegate when an impression was tracked.
/// \param ad A reference to the object that invoked the method.
///
/// \param impressionData Ad impression-level revenue data
///
- (void)nativeAd:(id <YMANativeAd> _Nonnull)ad didTrackImpressionWithData:(id <YMAImpressionData> _Nullable)impressionData;
/// Notifies that the user has chosen a reason for closing the ad and the ad must be hidden.
/// warning:
/// Advertising will not be hidden.
/// The developer must determine what to do with the ad after the reason for closing it is chosen.
/// \param ad A reference to the object that invoked the method.
///
- (void)closeNativeAd:(id <YMANativeAd> _Nonnull)ad;
@end

@class UIImage;

/// remark:
/// The image sizes are always available, but the images themselves are only available after loading.
SWIFT_CLASS("_TtC15YandexMobileAds16YMANativeAdImage")
@interface YMANativeAdImage : NSObject
/// Image size.
@property (nonatomic, readonly) CGSize size;
/// Loaded image. The image is available only after loading.
@property (nonatomic, readonly, strong) UIImage * _Nullable imageValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This protocol is responsible for sending messages about image loading.
SWIFT_PROTOCOL("_TtP15YandexMobileAds31YMANativeAdImageLoadingObserver_")
@protocol YMANativeAdImageLoadingObserver <NSObject>
/// Notifies that the image is loaded successfully.
/// \param ad A reference to the object that invoked the method.
///
- (void)nativeAdDidFinishLoadingImages:(id <YMANativeAd> _Nonnull)ad;
@end

@protocol YMANativeAdLoaderDelegate;

/// This class is responsible for loading native ads.
SWIFT_CLASS("_TtC15YandexMobileAds17YMANativeAdLoader")
@interface YMANativeAdLoader : NSObject
/// Monitors the process of loading native ads.
@property (nonatomic, weak) id <YMANativeAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param requestConfiguration Request configuration for targeting.
///
- (void)loadAdWithRequestConfiguration:(YMANativeAdRequestConfiguration * _Nonnull)requestConfiguration;
@end


/// The protocol defines the methods of a delegate that monitors the ad loading process.
/// remark:
/// The methods are invoked by an object of the <code>NativeAdLoader</code> class.
SWIFT_PROTOCOL("_TtP15YandexMobileAds25YMANativeAdLoaderDelegate_")
@protocol YMANativeAdLoaderDelegate <NSObject>
/// Notifies that a native ad is loaded.
/// \param loader The loader that sends the message.
///
/// \param ad Native ad that is loaded and ready to be displayed.
///
- (void)nativeAdLoader:(YMANativeAdLoader * _Nonnull)loader didLoadAd:(id <YMANativeAd> _Nonnull)ad;
/// Notifies that the ad failed to load.
/// \param loader The loader that sends the message.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>)
///
- (void)nativeAdLoader:(YMANativeAdLoader * _Nonnull)loader didFailLoadingWithError:(NSError * _Nonnull)error;
@end


/// <code>YMANativeAdMedia</code> represents media asset.
SWIFT_CLASS("_TtC15YandexMobileAds16YMANativeAdMedia")
@interface YMANativeAdMedia : NSObject
/// Media aspect ratio (width/height).
@property (nonatomic, readonly) CGFloat aspectRatio;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Types of native advertising.
typedef SWIFT_ENUM(NSInteger, YMANativeAdType, open) {
/// Content type.
  YMANativeAdTypeContent = 0,
/// App Install type.
  YMANativeAdTypeAppInstall = 1,
/// Media type.
  YMANativeAdTypeMedia = 2,

};


SWIFT_CLASS("_TtC15YandexMobileAds26YMANativeAdVideoController")
@interface YMANativeAdVideoController : NSObject
- (nonnull instancetype)init;
- (void)pause;
- (void)resume;
@end


/// This protocol allows to get <code>YMANativeAdVideoController</code> from <code>NativeAd</code>
SWIFT_PROTOCOL("_TtP15YandexMobileAds34YMANativeAdVideoControllerProvider_")
@protocol YMANativeAdVideoControllerProvider <NSObject>
/// VideoController provides playback control for ad video.
@property (nonatomic, readonly, strong) YMANativeAdVideoController * _Nullable videoController;
@end


/// This class is a template for native advertising layout.
SWIFT_CLASS("_TtC15YandexMobileAds19YMANativeBannerView")
@interface YMANativeBannerView : UIView
/// Loaded ad.
@property (nonatomic, strong) id <YMANativeAd> _Nullable ad;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
/// Applies the appearance settings from the template.
/// \param appearance Appearance of the ad.
///
- (void)applyAppearance:(YMANativeTemplateAppearance * _Nonnull)appearance;
/// Calculates the height of the ad.
/// \param ad Loaded ad.
///
/// \param width The width of the ad.
///
/// \param appearance Appearance of the ad.
///
///
/// returns:
/// Returns the height of the ad.
+ (CGFloat)heightWithAd:(id <YMANativeAd> _Nonnull)ad width:(CGFloat)width appearance:(YMANativeTemplateAppearance * _Nullable)appearance SWIFT_WARN_UNUSED_RESULT;
@end

@protocol YMANativeBulkAdLoaderDelegate;

/// This class is responsible for loading native ads.
SWIFT_CLASS("_TtC15YandexMobileAds21YMANativeBulkAdLoader")
@interface YMANativeBulkAdLoader : NSObject
/// An object that implements the <code>YMANativeBulkAdLoaderDelegate</code> protocol that tracks the progress of bulk native ad loading.
@property (nonatomic, weak) id <YMANativeBulkAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param requestConfiguration Request configuration for targeting.
///
/// \param adsCount Count of requested ads.
///
- (void)loadAdsWithRequestConfiguration:(YMANativeAdRequestConfiguration * _Nonnull)requestConfiguration adsCount:(NSInteger)adsCount;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds29YMANativeBulkAdLoaderDelegate_")
@protocol YMANativeBulkAdLoaderDelegate <NSObject>
/// Notifies that a native ads are loaded.
/// \param nativeBulkAdLoader The loader that sends the message.
///
/// \param ads Loaded native ads.
///
- (void)nativeBulkAdLoader:(YMANativeBulkAdLoader * _Nonnull)nativeBulkAdLoader didLoadAds:(NSArray<id <YMANativeAd>> * _Nonnull)ads;
/// Notifies that the ads failed to load.
/// \param nativeBulkAdLoader The loader that sends the message.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)nativeBulkAdLoader:(YMANativeBulkAdLoader * _Nonnull)nativeBulkAdLoader didFailLoadingWithError:(NSError * _Nonnull)error;
@end

/// Error description.
typedef SWIFT_ENUM(NSInteger, YMANativeErrorCode, open) {
/// Occurs when binding an ad if the <code>UIView</code> is omitted for a required asset.
  YMANativeErrorCodeNoViewForAsset = 0,
/// Occurs when the nil value is passed to the ad binding method as the <code>View</code>.
  YMANativeErrorCodeInvalidViewForBinding = 1,
};


/// <code>YMANativePromoBannerView</code> provides template for displaying promo ads.
SWIFT_CLASS("_TtC15YandexMobileAds24YMANativePromoBannerView")
@interface YMANativePromoBannerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@class YMANativeVideoPlaybackControls;

/// Objects that implement this protocol allow to set custom video playback controls;
SWIFT_PROTOCOL("_TtP15YandexMobileAds34YMANativeVideoControlsCustomizable_")
@protocol YMANativeVideoControlsCustomizable <NSObject>
/// Sets an <code>YMANativeVideoPlaybackControls</code>
/// \param videoPlaybackControls Video playback controls.
///
- (void)setVideoPlaybackControls:(YMANativeVideoPlaybackControls * _Nonnull)videoPlaybackControls;
@end

@protocol YMANativeVideoPlaybackProgressControl;
@protocol YMANativeVideoPlaybackMuteControl;

/// Class with playback controls.
SWIFT_CLASS("_TtC15YandexMobileAds30YMANativeVideoPlaybackControls")
@interface YMANativeVideoPlaybackControls : NSObject
/// nitializes an object of the <code>YMANativeVideoPlaybackControls</code> class with progress control and mute control.
/// \param progressControl An object of the <code>UIView</code> class and conform to protocol <code>YMANativeVideoPlaybackProgressControl</code>.
///
/// \param muteControl An object of the <code>UIView</code> class and conform to protocol <code>YMANativeVideoPlaybackMuteControl</code>.
///
///
/// returns:
/// An object of the <code>NativeVideoPlaybackControls</code> class with progress control and mute control.
- (nonnull instancetype)initWithProgressControl:(UIView <YMANativeVideoPlaybackProgressControl> * _Nullable)progressControl muteControl:(UIView <YMANativeVideoPlaybackMuteControl> * _Nullable)muteControl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol YMANativeVideoPlaybackMuteControlDelegate;

SWIFT_PROTOCOL("_TtP15YandexMobileAds33YMANativeVideoPlaybackMuteControl_")
@protocol YMANativeVideoPlaybackMuteControl <NSObject>
/// Delegate is notified about video playback mute control events.
@property (nonatomic, strong) id <YMANativeVideoPlaybackMuteControlDelegate> _Nullable delegate;
/// Configures a mute control with specified isMuted flag.
/// \param isMuted Flag for setting mute/unmute state.
///
- (void)configureWithIsMuted:(BOOL)isMuted;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds41YMANativeVideoPlaybackMuteControlDelegate_")
@protocol YMANativeVideoPlaybackMuteControlDelegate <NSObject>
/// Notifies that the user has clicked on mute control.
/// \param muteControl A reference to the object that invoked the method.
///
/// \param isMuted A flag for representing current mute control state.
///
- (void)muteControl:(id <YMANativeVideoPlaybackMuteControl> _Nonnull)muteControl didChangeIsMuted:(BOOL)isMuted;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds37YMANativeVideoPlaybackProgressControl_")
@protocol YMANativeVideoPlaybackProgressControl <NSObject>
/// Configures a progress control with position and duration.
/// \param position Position of current OutStream ad.
///
/// \param duration Duration of current OutStream ad.
///
- (void)configureWithPosition:(NSTimeInterval)position duration:(NSTimeInterval)duration;
/// Resets a video progress.
- (void)reset;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds9YMARating_")
@protocol YMARating <NSObject>
/// Sets the rating value in the range [0; 5].
/// \param rating The rating value in the range [0; 5].
///
- (void)setRating:(NSNumber * _Nullable)rating;
/// Returns the rating value in the range [0; 5].
///
/// returns:
/// Rating value.
- (NSNumber * _Nullable)rating SWIFT_WARN_UNUSED_RESULT;
@end



/// <code>YMAReward</code> represents reward given to the user.
SWIFT_PROTOCOL("_TtP15YandexMobileAds9YMAReward_")
@protocol YMAReward <NSObject>
/// Amount rewarded to the user.
@property (nonatomic, readonly) NSInteger amount;
/// Type of the reward.
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

@protocol YMARewardedAdDelegate;

/// This class is responsible for showing a rewarded ad.
SWIFT_CLASS("_TtC15YandexMobileAds13YMARewardedAd")
@interface YMARewardedAd : NSObject
/// Information data for ad
@property (nonatomic, readonly, strong) YMAAdInfo * _Nullable adInfo;
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMARewardedAdDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Use this method to display an rewarded ad after preloading.
/// \param viewController An object of the <code>UIViewController</code> class, which is used to display an interstitial ad.
///
- (void)showFromViewController:(UIViewController * _Nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds21YMARewardedAdDelegate_")
@protocol YMARewardedAdDelegate <NSObject>
/// Notifies that rewarded ad has rewarded the user.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
/// \param reward Reward given to the user.
///
- (void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didReward:(id <YMAReward> _Nonnull)reward;
@optional
/// Notifies that the ad can’t be displayed.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>YMAAdErrorCode</code>).
///
- (void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didFailToShowWithError:(NSError * _Nonnull)error;
/// Called after the rewarded ad shows.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdDidShow:(YMARewardedAd * _Nonnull)rewardedAd;
/// Called after dismissing the rewarded ad.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdDidDismiss:(YMARewardedAd * _Nonnull)rewardedAd;
/// Notifies that the user has clicked on the ad.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdDidClick:(YMARewardedAd * _Nonnull)rewardedAd;
/// Notifies delegate when an impression was tracked.
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
/// \param impressionData Ad impression-level revenue data.
///
- (void)rewardedAd:(YMARewardedAd * _Nonnull)rewardedAd didTrackImpressionWith:(id <YMAImpressionData> _Nullable)impressionData;
@end

@protocol YMARewardedAdLoaderDelegate;

/// This class is responsible for loading a rewarded ad.
SWIFT_CLASS("_TtC15YandexMobileAds19YMARewardedAdLoader")
@interface YMARewardedAdLoader : NSObject
/// Tracks ad lifecycle events.
@property (nonatomic, weak) id <YMARewardedAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)init;
/// Loads an ad with the specified targeting data.
/// \param request Request configuration for targeting.
///
- (void)loadAdWithRequestConfiguration:(YMAAdRequestConfiguration * _Nonnull)request;
/// . Cancel the ad loading, that was launched in loadAdWithRequestConfiguration:requestConfiguration
- (void)cancelLoading;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds27YMARewardedAdLoaderDelegate_")
@protocol YMARewardedAdLoaderDelegate <NSObject>
/// Notifies that the ad loaded successfully.
/// \param adLoader A reference to an object of the <code>YMARewardedAdLoader</code> class that invoked the method.
///
/// \param rewardedAd A reference to an object of the <code>YMARewardedAd</code> class that invoked the method.
///
- (void)rewardedAdLoader:(YMARewardedAdLoader * _Nonnull)adLoader didLoad:(YMARewardedAd * _Nonnull)rewardedAd;
/// Notifies that the ad failed to load.
/// \param adLoader A reference to an object of the <code>RewardedAdLoader</code> class that invoked the method.
///
/// \param error Information about the error (for details, see <code>AdErrorCode</code>).
///
- (void)rewardedAdLoader:(YMARewardedAdLoader * _Nonnull)adLoader didFailToLoadWithError:(YMAAdRequestError * _Nonnull)error;
@end


/// Object sizing constraint.
typedef SWIFT_ENUM(NSInteger, YMASizeConstraintType, open) {
/// Fixed width or height.
  YMASizeConstraintTypeFixed = 0,
/// The ratio of the size of something to the size of the entire contents.
/// The actual size of the content is not considered.
  YMASizeConstraintTypeFixedBannerRatio = 1,
/// The ratio of the size of something to the size of the entire content,
/// but no more than the actual size of the content.
  YMASizeConstraintTypePreferredBannerRatio = 2,
};


/// Version information.
SWIFT_CLASS("_TtC15YandexMobileAds10YMAVersion")
@interface YMAVersion : NSObject
/// Object describing current sdk verision.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) YMAVersion * _Nonnull currentVersion;)
+ (YMAVersion * _Nonnull)currentVersion SWIFT_WARN_UNUSED_RESULT;
/// Major version.
@property (nonatomic, readonly) NSInteger major;
/// Minor version.
@property (nonatomic, readonly) NSInteger minor;
/// Patch version.
@property (nonatomic, readonly) NSInteger patch;
/// Prereleased identifiers.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull prereleaseIdentifiers;
/// Build metadate identifiers.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull buildMetadataIdentifiers;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol YMAVideoDelegate;

/// <code>YMAVideoController</code> manages video content of the ad.
SWIFT_CLASS("_TtC15YandexMobileAds18YMAVideoController")
@interface YMAVideoController : NSObject
/// Delegate is notified about video playback events.
@property (nonatomic, weak) id <YMAVideoDelegate> _Nullable delegate;
- (nonnull instancetype)init;
@end


SWIFT_PROTOCOL("_TtP15YandexMobileAds16YMAVideoDelegate_")
@protocol YMAVideoDelegate <NSObject>
@optional
/// Notifies delegate when video finished playing.
/// \param videoController Video controller related to video.
///
- (void)videoControllerDidFinishPlayingVideo:(YMAVideoController * _Nonnull)videoController;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
